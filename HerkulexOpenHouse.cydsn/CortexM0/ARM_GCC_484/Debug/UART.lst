ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_ScbEnableIntr,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	UART_ScbEnableIntr, %function
  22              	UART_ScbEnableIntr:
  23              	.LFB7:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\UART.c"
   1:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC4/UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART.c **** *
   5:.\Generated_Source\PSoC4/UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/UART.c **** *
   8:.\Generated_Source\PSoC4/UART.c **** * Note:
   9:.\Generated_Source\PSoC4/UART.c **** *
  10:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART.c **** 
  17:.\Generated_Source\PSoC4/UART.c **** #include "UART_PVT.h"
  18:.\Generated_Source\PSoC4/UART.c **** 
  19:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/UART.c ****     #include "UART_I2C_PVT.h"
  21:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/UART.c **** 
  23:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/UART.c ****     #include "UART_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/UART.c **** 
  27:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/UART.c ****     #include "UART_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/UART.c **** 
  31:.\Generated_Source\PSoC4/UART.c **** 
  32:.\Generated_Source\PSoC4/UART.c **** /***************************************
  33:.\Generated_Source\PSoC4/UART.c **** *    Run Time Configuration Vars
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 2


  34:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  35:.\Generated_Source\PSoC4/UART.c **** 
  36:.\Generated_Source\PSoC4/UART.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/UART.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_scbMode = UART_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableWake;
  41:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableIntr;
  42:.\Generated_Source\PSoC4/UART.c **** 
  43:.\Generated_Source\PSoC4/UART.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_mode;
  45:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_acceptAddr;
  46:.\Generated_Source\PSoC4/UART.c **** 
  47:.\Generated_Source\PSoC4/UART.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_rxBuffer;
  49:.\Generated_Source\PSoC4/UART.c ****     uint8  UART_rxDataBits;
  50:.\Generated_Source\PSoC4/UART.c ****     uint32 UART_rxBufferSize;
  51:.\Generated_Source\PSoC4/UART.c **** 
  52:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_txBuffer;
  53:.\Generated_Source\PSoC4/UART.c ****     uint8  UART_txDataBits;
  54:.\Generated_Source\PSoC4/UART.c ****     uint32 UART_txBufferSize;
  55:.\Generated_Source\PSoC4/UART.c **** 
  56:.\Generated_Source\PSoC4/UART.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_numberOfAddr;
  58:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_subAddrSize;
  59:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/UART.c **** 
  61:.\Generated_Source\PSoC4/UART.c **** 
  62:.\Generated_Source\PSoC4/UART.c **** /***************************************
  63:.\Generated_Source\PSoC4/UART.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  65:.\Generated_Source\PSoC4/UART.c **** 
  66:.\Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  67:.\Generated_Source\PSoC4/UART.c **** 
  68:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
  69:.\Generated_Source\PSoC4/UART.c **** #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
  70:.\Generated_Source\PSoC4/UART.c ****     void (*UART_customIntrHandler)(void) = NULL;
  71:.\Generated_Source\PSoC4/UART.c **** #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
  72:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
  73:.\Generated_Source\PSoC4/UART.c **** 
  74:.\Generated_Source\PSoC4/UART.c **** 
  75:.\Generated_Source\PSoC4/UART.c **** /***************************************
  76:.\Generated_Source\PSoC4/UART.c **** *    Private Function Prototypes
  77:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  78:.\Generated_Source\PSoC4/UART.c **** 
  79:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void);
  80:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void);
  81:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void);
  82:.\Generated_Source\PSoC4/UART.c **** 
  83:.\Generated_Source\PSoC4/UART.c **** 
  84:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
  86:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  87:.\Generated_Source\PSoC4/UART.c **** *
  88:.\Generated_Source\PSoC4/UART.c **** * Summary:
  89:.\Generated_Source\PSoC4/UART.c **** *  Initializes the SCB component to operate in one of the selected
  90:.\Generated_Source\PSoC4/UART.c **** *  configurations: I2C, SPI, UART or EZI2C.
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 3


  91:.\Generated_Source\PSoC4/UART.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  92:.\Generated_Source\PSoC4/UART.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
  93:.\Generated_Source\PSoC4/UART.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  94:.\Generated_Source\PSoC4/UART.c **** *
  95:.\Generated_Source\PSoC4/UART.c **** * Parameters:
  96:.\Generated_Source\PSoC4/UART.c **** *  None
  97:.\Generated_Source\PSoC4/UART.c **** *
  98:.\Generated_Source\PSoC4/UART.c **** * Return:
  99:.\Generated_Source\PSoC4/UART.c **** *  None
 100:.\Generated_Source\PSoC4/UART.c **** *
 101:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 102:.\Generated_Source\PSoC4/UART.c **** void UART_Init(void)
 103:.\Generated_Source\PSoC4/UART.c **** {
 104:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 105:.\Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 106:.\Generated_Source\PSoC4/UART.c ****     {
 107:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 0u;
 108:.\Generated_Source\PSoC4/UART.c ****     }
 109:.\Generated_Source\PSoC4/UART.c ****     else
 110:.\Generated_Source\PSoC4/UART.c ****     {
 111:.\Generated_Source\PSoC4/UART.c ****         /* Initialization was done before this function call */
 112:.\Generated_Source\PSoC4/UART.c ****     }
 113:.\Generated_Source\PSoC4/UART.c **** 
 114:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 115:.\Generated_Source\PSoC4/UART.c ****     UART_I2CInit();
 116:.\Generated_Source\PSoC4/UART.c **** 
 117:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 118:.\Generated_Source\PSoC4/UART.c ****     UART_SpiInit();
 119:.\Generated_Source\PSoC4/UART.c **** 
 120:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 121:.\Generated_Source\PSoC4/UART.c ****     UART_UartInit();
 122:.\Generated_Source\PSoC4/UART.c **** 
 123:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 124:.\Generated_Source\PSoC4/UART.c ****     UART_EzI2CInit();
 125:.\Generated_Source\PSoC4/UART.c **** 
 126:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 127:.\Generated_Source\PSoC4/UART.c **** }
 128:.\Generated_Source\PSoC4/UART.c **** 
 129:.\Generated_Source\PSoC4/UART.c **** 
 130:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 131:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 132:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 133:.\Generated_Source\PSoC4/UART.c **** *
 134:.\Generated_Source\PSoC4/UART.c **** * Summary:
 135:.\Generated_Source\PSoC4/UART.c **** *  Enables the SCB component operation.
 136:.\Generated_Source\PSoC4/UART.c **** *  The SCB configuration should be not changed when the component is enabled.
 137:.\Generated_Source\PSoC4/UART.c **** *  Any configuration changes should be made after disabling the component.
 138:.\Generated_Source\PSoC4/UART.c **** *
 139:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 140:.\Generated_Source\PSoC4/UART.c **** *  None
 141:.\Generated_Source\PSoC4/UART.c **** *
 142:.\Generated_Source\PSoC4/UART.c **** * Return:
 143:.\Generated_Source\PSoC4/UART.c **** *  None
 144:.\Generated_Source\PSoC4/UART.c **** *
 145:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 146:.\Generated_Source\PSoC4/UART.c **** void UART_Enable(void)
 147:.\Generated_Source\PSoC4/UART.c **** {
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 4


 148:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 149:.\Generated_Source\PSoC4/UART.c ****     /* Enable SCB block, only if it is already configured */
 150:.\Generated_Source\PSoC4/UART.c ****     if (!UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 151:.\Generated_Source\PSoC4/UART.c ****     {
 152:.\Generated_Source\PSoC4/UART.c ****         UART_CTRL_REG |= UART_CTRL_ENABLED;
 153:.\Generated_Source\PSoC4/UART.c **** 
 154:.\Generated_Source\PSoC4/UART.c ****         UART_ScbEnableIntr();
 155:.\Generated_Source\PSoC4/UART.c **** 
 156:.\Generated_Source\PSoC4/UART.c ****         /* Call PostEnable function specific to current operation mode */
 157:.\Generated_Source\PSoC4/UART.c ****         UART_ScbModePostEnable();
 158:.\Generated_Source\PSoC4/UART.c ****     }
 159:.\Generated_Source\PSoC4/UART.c **** #else
 160:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
 161:.\Generated_Source\PSoC4/UART.c **** 
 162:.\Generated_Source\PSoC4/UART.c ****     UART_ScbEnableIntr();
 163:.\Generated_Source\PSoC4/UART.c **** 
 164:.\Generated_Source\PSoC4/UART.c ****     /* Call PostEnable function specific to current operation mode */
 165:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
 166:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 167:.\Generated_Source\PSoC4/UART.c **** }
 168:.\Generated_Source\PSoC4/UART.c **** 
 169:.\Generated_Source\PSoC4/UART.c **** 
 170:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
 172:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 173:.\Generated_Source\PSoC4/UART.c **** *
 174:.\Generated_Source\PSoC4/UART.c **** * Summary:
 175:.\Generated_Source\PSoC4/UART.c **** *  Invokes SCB_Init() and SCB_Enable().
 176:.\Generated_Source\PSoC4/UART.c **** *  After this function call, the component is enabled and ready for operation.
 177:.\Generated_Source\PSoC4/UART.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 178:.\Generated_Source\PSoC4/UART.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 179:.\Generated_Source\PSoC4/UART.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 180:.\Generated_Source\PSoC4/UART.c **** *
 181:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 182:.\Generated_Source\PSoC4/UART.c **** *  None
 183:.\Generated_Source\PSoC4/UART.c **** *
 184:.\Generated_Source\PSoC4/UART.c **** * Return:
 185:.\Generated_Source\PSoC4/UART.c **** *  None
 186:.\Generated_Source\PSoC4/UART.c **** *
 187:.\Generated_Source\PSoC4/UART.c **** * Global variables:
 188:.\Generated_Source\PSoC4/UART.c **** *  UART_initVar - used to check initial configuration, modified
 189:.\Generated_Source\PSoC4/UART.c **** *  on first function call.
 190:.\Generated_Source\PSoC4/UART.c **** *
 191:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/UART.c **** void UART_Start(void)
 193:.\Generated_Source\PSoC4/UART.c **** {
 194:.\Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 195:.\Generated_Source\PSoC4/UART.c ****     {
 196:.\Generated_Source\PSoC4/UART.c ****         UART_Init();
 197:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 198:.\Generated_Source\PSoC4/UART.c ****     }
 199:.\Generated_Source\PSoC4/UART.c **** 
 200:.\Generated_Source\PSoC4/UART.c ****     UART_Enable();
 201:.\Generated_Source\PSoC4/UART.c **** }
 202:.\Generated_Source\PSoC4/UART.c **** 
 203:.\Generated_Source\PSoC4/UART.c **** 
 204:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 5


 205:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 206:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 207:.\Generated_Source\PSoC4/UART.c **** *
 208:.\Generated_Source\PSoC4/UART.c **** * Summary:
 209:.\Generated_Source\PSoC4/UART.c **** *  Disables the SCB component and its interrupt.
 210:.\Generated_Source\PSoC4/UART.c **** *  It also disables all TX interrupt sources so as not to cause an unexpected
 211:.\Generated_Source\PSoC4/UART.c **** *  interrupt trigger because after the component is enabled, the TX FIFO 
 212:.\Generated_Source\PSoC4/UART.c **** *  is empty.
 213:.\Generated_Source\PSoC4/UART.c **** *
 214:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 215:.\Generated_Source\PSoC4/UART.c **** *  None
 216:.\Generated_Source\PSoC4/UART.c **** *
 217:.\Generated_Source\PSoC4/UART.c **** * Return:
 218:.\Generated_Source\PSoC4/UART.c **** *  None
 219:.\Generated_Source\PSoC4/UART.c **** * 
 220:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 221:.\Generated_Source\PSoC4/UART.c **** void UART_Stop(void)
 222:.\Generated_Source\PSoC4/UART.c **** {
 223:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 224:.\Generated_Source\PSoC4/UART.c ****     UART_DisableInt();
 225:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 226:.\Generated_Source\PSoC4/UART.c **** 
 227:.\Generated_Source\PSoC4/UART.c ****     /* Call Stop function specific to current operation mode */
 228:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 229:.\Generated_Source\PSoC4/UART.c **** 
 230:.\Generated_Source\PSoC4/UART.c ****     /* Disable SCB IP */
 231:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 232:.\Generated_Source\PSoC4/UART.c **** 
 233:.\Generated_Source\PSoC4/UART.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 234:.\Generated_Source\PSoC4/UART.c ****     * interrupt trigger because after the component is enabled, the TX FIFO
 235:.\Generated_Source\PSoC4/UART.c ****     * is empty.
 236:.\Generated_Source\PSoC4/UART.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 237:.\Generated_Source\PSoC4/UART.c ****     * sources when they are disabled. This can cause a code lock-up in the
 238:.\Generated_Source\PSoC4/UART.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 239:.\Generated_Source\PSoC4/UART.c ****     * is disabled.
 240:.\Generated_Source\PSoC4/UART.c ****     */
 241:.\Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 242:.\Generated_Source\PSoC4/UART.c **** 
 243:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 244:.\Generated_Source\PSoC4/UART.c ****     UART_ClearPendingInt();
 245:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 246:.\Generated_Source\PSoC4/UART.c **** }
 247:.\Generated_Source\PSoC4/UART.c **** 
 248:.\Generated_Source\PSoC4/UART.c **** 
 249:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetRxFifoLevel
 251:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 252:.\Generated_Source\PSoC4/UART.c **** *
 253:.\Generated_Source\PSoC4/UART.c **** * Summary:
 254:.\Generated_Source\PSoC4/UART.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 255:.\Generated_Source\PSoC4/UART.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 256:.\Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 257:.\Generated_Source\PSoC4/UART.c **** *
 258:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 259:.\Generated_Source\PSoC4/UART.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 260:.\Generated_Source\PSoC4/UART.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 261:.\Generated_Source\PSoC4/UART.c **** *
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 6


 262:.\Generated_Source\PSoC4/UART.c **** * Return:
 263:.\Generated_Source\PSoC4/UART.c **** *  None
 264:.\Generated_Source\PSoC4/UART.c **** *
 265:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 266:.\Generated_Source\PSoC4/UART.c **** void UART_SetRxFifoLevel(uint32 level)
 267:.\Generated_Source\PSoC4/UART.c **** {
 268:.\Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 269:.\Generated_Source\PSoC4/UART.c **** 
 270:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 271:.\Generated_Source\PSoC4/UART.c **** 
 272:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 273:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 274:.\Generated_Source\PSoC4/UART.c **** 
 275:.\Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 276:.\Generated_Source\PSoC4/UART.c **** }
 277:.\Generated_Source\PSoC4/UART.c **** 
 278:.\Generated_Source\PSoC4/UART.c **** 
 279:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetTxFifoLevel
 281:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/UART.c **** *
 283:.\Generated_Source\PSoC4/UART.c **** * Summary:
 284:.\Generated_Source\PSoC4/UART.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 285:.\Generated_Source\PSoC4/UART.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
 286:.\Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 287:.\Generated_Source\PSoC4/UART.c **** *
 288:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 290:.\Generated_Source\PSoC4/UART.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 291:.\Generated_Source\PSoC4/UART.c **** *
 292:.\Generated_Source\PSoC4/UART.c **** * Return:
 293:.\Generated_Source\PSoC4/UART.c **** *  None
 294:.\Generated_Source\PSoC4/UART.c **** *
 295:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 296:.\Generated_Source\PSoC4/UART.c **** void UART_SetTxFifoLevel(uint32 level)
 297:.\Generated_Source\PSoC4/UART.c **** {
 298:.\Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
 299:.\Generated_Source\PSoC4/UART.c **** 
 300:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 301:.\Generated_Source\PSoC4/UART.c **** 
 302:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 303:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 304:.\Generated_Source\PSoC4/UART.c **** 
 305:.\Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 306:.\Generated_Source\PSoC4/UART.c **** }
 307:.\Generated_Source\PSoC4/UART.c **** 
 308:.\Generated_Source\PSoC4/UART.c **** 
 309:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 310:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetCustomInterruptHandler
 312:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC4/UART.c ****     *
 314:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 315:.\Generated_Source\PSoC4/UART.c ****     *  Registers a function to be called by the internal interrupt handler.
 316:.\Generated_Source\PSoC4/UART.c ****     *  First the function that is registered is called, then the internal interrupt
 317:.\Generated_Source\PSoC4/UART.c ****     *  handler performs any operation such as software buffer management functions
 318:.\Generated_Source\PSoC4/UART.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 7


 319:.\Generated_Source\PSoC4/UART.c ****     *  the software buffer operations. Only one custom handler is supported, which
 320:.\Generated_Source\PSoC4/UART.c ****     *  is the function provided by the most recent call.
 321:.\Generated_Source\PSoC4/UART.c ****     *  At the initialization time no custom handler is registered.
 322:.\Generated_Source\PSoC4/UART.c ****     *
 323:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 324:.\Generated_Source\PSoC4/UART.c ****     *  func: Pointer to the function to register.
 325:.\Generated_Source\PSoC4/UART.c ****     *        The value NULL indicates to remove the current custom interrupt
 326:.\Generated_Source\PSoC4/UART.c ****     *        handler.
 327:.\Generated_Source\PSoC4/UART.c ****     *
 328:.\Generated_Source\PSoC4/UART.c ****     * Return:
 329:.\Generated_Source\PSoC4/UART.c ****     *  None
 330:.\Generated_Source\PSoC4/UART.c ****     *
 331:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 332:.\Generated_Source\PSoC4/UART.c ****     void UART_SetCustomInterruptHandler(void (*func)(void))
 333:.\Generated_Source\PSoC4/UART.c ****     {
 334:.\Generated_Source\PSoC4/UART.c ****     #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
 335:.\Generated_Source\PSoC4/UART.c ****         UART_customIntrHandler = func; /* Register interrupt handler */
 336:.\Generated_Source\PSoC4/UART.c ****     #else
 337:.\Generated_Source\PSoC4/UART.c ****         if (NULL != func)
 338:.\Generated_Source\PSoC4/UART.c ****         {
 339:.\Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 340:.\Generated_Source\PSoC4/UART.c ****         }
 341:.\Generated_Source\PSoC4/UART.c ****     #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
 342:.\Generated_Source\PSoC4/UART.c ****     }
 343:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 344:.\Generated_Source\PSoC4/UART.c **** 
 345:.\Generated_Source\PSoC4/UART.c **** 
 346:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 347:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeEnableIntr
 348:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 349:.\Generated_Source\PSoC4/UART.c **** *
 350:.\Generated_Source\PSoC4/UART.c **** * Summary:
 351:.\Generated_Source\PSoC4/UART.c **** *  Enables an interrupt for a specific mode.
 352:.\Generated_Source\PSoC4/UART.c **** *
 353:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 354:.\Generated_Source\PSoC4/UART.c **** *  None
 355:.\Generated_Source\PSoC4/UART.c **** *
 356:.\Generated_Source\PSoC4/UART.c **** * Return:
 357:.\Generated_Source\PSoC4/UART.c **** *  None
 358:.\Generated_Source\PSoC4/UART.c **** *
 359:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void)
 361:.\Generated_Source\PSoC4/UART.c **** {
  25              		.loc 1 361 0
  26              		.cfi_startproc
  27 0000 08B5     		push	{r3, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 3, -8
  30              		.cfi_offset 14, -4
 362:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 363:.\Generated_Source\PSoC4/UART.c ****     /* Enable interrupt in NVIC */
 364:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 365:.\Generated_Source\PSoC4/UART.c ****         if (0u != UART_scbEnableIntr)
 366:.\Generated_Source\PSoC4/UART.c ****         {
 367:.\Generated_Source\PSoC4/UART.c ****             UART_EnableInt();
 368:.\Generated_Source\PSoC4/UART.c ****         }
 369:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 8


 370:.\Generated_Source\PSoC4/UART.c ****     #else
 371:.\Generated_Source\PSoC4/UART.c ****         UART_EnableInt();
  31              		.loc 1 371 0
  32 0002 0B20     		mov	r0, #11
  33 0004 FFF7FEFF 		bl	CyIntEnable
  34              	.LVL0:
 372:.\Generated_Source\PSoC4/UART.c **** 
 373:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 374:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 375:.\Generated_Source\PSoC4/UART.c **** }
  35              		.loc 1 375 0
  36              		@ sp needed
  37 0008 08BD     		pop	{r3, pc}
  38              		.cfi_endproc
  39              	.LFE7:
  40              		.size	UART_ScbEnableIntr, .-UART_ScbEnableIntr
  41 000a C046     		.section	.text.UART_ScbModePostEnable,"ax",%progbits
  42              		.align	2
  43              		.code	16
  44              		.thumb_func
  45              		.type	UART_ScbModePostEnable, %function
  46              	UART_ScbModePostEnable:
  47              	.LFB8:
 376:.\Generated_Source\PSoC4/UART.c **** 
 377:.\Generated_Source\PSoC4/UART.c **** 
 378:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 379:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModePostEnable
 380:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 381:.\Generated_Source\PSoC4/UART.c **** *
 382:.\Generated_Source\PSoC4/UART.c **** * Summary:
 383:.\Generated_Source\PSoC4/UART.c **** *  Calls the PostEnable function for a specific operation mode.
 384:.\Generated_Source\PSoC4/UART.c **** *
 385:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 386:.\Generated_Source\PSoC4/UART.c **** *  None
 387:.\Generated_Source\PSoC4/UART.c **** *
 388:.\Generated_Source\PSoC4/UART.c **** * Return:
 389:.\Generated_Source\PSoC4/UART.c **** *  None
 390:.\Generated_Source\PSoC4/UART.c **** *
 391:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void)
 393:.\Generated_Source\PSoC4/UART.c **** {
  48              		.loc 1 393 0
  49              		.cfi_startproc
  50 0000 08B5     		push	{r3, lr}
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 3, -8
  53              		.cfi_offset 14, -4
 394:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 395:.\Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 396:.\Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_SPI_RUNTM_CFG)
 397:.\Generated_Source\PSoC4/UART.c ****     {
 398:.\Generated_Source\PSoC4/UART.c ****         UART_SpiPostEnable();
 399:.\Generated_Source\PSoC4/UART.c ****     }
 400:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 401:.\Generated_Source\PSoC4/UART.c ****     {
 402:.\Generated_Source\PSoC4/UART.c ****         UART_UartPostEnable();
 403:.\Generated_Source\PSoC4/UART.c ****     }
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 9


 404:.\Generated_Source\PSoC4/UART.c ****     else
 405:.\Generated_Source\PSoC4/UART.c ****     {
 406:.\Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 407:.\Generated_Source\PSoC4/UART.c ****     }
 408:.\Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 409:.\Generated_Source\PSoC4/UART.c **** 
 410:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 411:.\Generated_Source\PSoC4/UART.c ****     UART_SpiPostEnable();
 412:.\Generated_Source\PSoC4/UART.c **** 
 413:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 414:.\Generated_Source\PSoC4/UART.c ****     UART_UartPostEnable();
  54              		.loc 1 414 0
  55 0002 FFF7FEFF 		bl	UART_UartPostEnable
  56              	.LVL1:
 415:.\Generated_Source\PSoC4/UART.c **** 
 416:.\Generated_Source\PSoC4/UART.c **** #else
 417:.\Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 418:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 419:.\Generated_Source\PSoC4/UART.c **** }
  57              		.loc 1 419 0
  58              		@ sp needed
  59 0006 08BD     		pop	{r3, pc}
  60              		.cfi_endproc
  61              	.LFE8:
  62              		.size	UART_ScbModePostEnable, .-UART_ScbModePostEnable
  63              		.section	.text.UART_ScbModeStop,"ax",%progbits
  64              		.align	2
  65              		.code	16
  66              		.thumb_func
  67              		.type	UART_ScbModeStop, %function
  68              	UART_ScbModeStop:
  69              	.LFB9:
 420:.\Generated_Source\PSoC4/UART.c **** 
 421:.\Generated_Source\PSoC4/UART.c **** 
 422:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeStop
 424:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART.c **** *
 426:.\Generated_Source\PSoC4/UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART.c **** *  Calls the Stop function for a specific operation mode.
 428:.\Generated_Source\PSoC4/UART.c **** *
 429:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART.c **** *
 432:.\Generated_Source\PSoC4/UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART.c **** *  None
 434:.\Generated_Source\PSoC4/UART.c **** *
 435:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void)
 437:.\Generated_Source\PSoC4/UART.c **** {
  70              		.loc 1 437 0
  71              		.cfi_startproc
  72 0000 08B5     		push	{r3, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
 438:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 10


 439:.\Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_I2C_RUNTM_CFG)
 440:.\Generated_Source\PSoC4/UART.c ****     {
 441:.\Generated_Source\PSoC4/UART.c ****         UART_I2CStop();
 442:.\Generated_Source\PSoC4/UART.c ****     }
 443:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_EZI2C_RUNTM_CFG)
 444:.\Generated_Source\PSoC4/UART.c ****     {
 445:.\Generated_Source\PSoC4/UART.c ****         UART_EzI2CStop();
 446:.\Generated_Source\PSoC4/UART.c ****     }
 447:.\Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 448:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_SPI_RUNTM_CFG)
 449:.\Generated_Source\PSoC4/UART.c ****     {
 450:.\Generated_Source\PSoC4/UART.c ****         UART_SpiStop();
 451:.\Generated_Source\PSoC4/UART.c ****     }
 452:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 453:.\Generated_Source\PSoC4/UART.c ****     {
 454:.\Generated_Source\PSoC4/UART.c ****         UART_UartStop();
 455:.\Generated_Source\PSoC4/UART.c ****     }
 456:.\Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 457:.\Generated_Source\PSoC4/UART.c ****     else
 458:.\Generated_Source\PSoC4/UART.c ****     {
 459:.\Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 460:.\Generated_Source\PSoC4/UART.c ****     }
 461:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 462:.\Generated_Source\PSoC4/UART.c ****     UART_I2CStop();
 463:.\Generated_Source\PSoC4/UART.c **** 
 464:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 465:.\Generated_Source\PSoC4/UART.c ****     UART_EzI2CStop();
 466:.\Generated_Source\PSoC4/UART.c **** 
 467:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 468:.\Generated_Source\PSoC4/UART.c ****     UART_SpiStop();
 469:.\Generated_Source\PSoC4/UART.c **** 
 470:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 471:.\Generated_Source\PSoC4/UART.c ****     UART_UartStop();
  76              		.loc 1 471 0
  77 0002 FFF7FEFF 		bl	UART_UartStop
  78              	.LVL2:
 472:.\Generated_Source\PSoC4/UART.c **** 
 473:.\Generated_Source\PSoC4/UART.c **** #else
 474:.\Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 475:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 476:.\Generated_Source\PSoC4/UART.c **** }
  79              		.loc 1 476 0
  80              		@ sp needed
  81 0006 08BD     		pop	{r3, pc}
  82              		.cfi_endproc
  83              	.LFE9:
  84              		.size	UART_ScbModeStop, .-UART_ScbModeStop
  85              		.section	.text.UART_Init,"ax",%progbits
  86              		.align	2
  87              		.global	UART_Init
  88              		.code	16
  89              		.thumb_func
  90              		.type	UART_Init, %function
  91              	UART_Init:
  92              	.LFB0:
 103:.\Generated_Source\PSoC4/UART.c **** {
  93              		.loc 1 103 0
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 11


  94              		.cfi_startproc
  95 0000 08B5     		push	{r3, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 3, -8
  98              		.cfi_offset 14, -4
 121:.\Generated_Source\PSoC4/UART.c ****     UART_UartInit();
  99              		.loc 1 121 0
 100 0002 FFF7FEFF 		bl	UART_UartInit
 101              	.LVL3:
 127:.\Generated_Source\PSoC4/UART.c **** }
 102              		.loc 1 127 0
 103              		@ sp needed
 104 0006 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE0:
 107              		.size	UART_Init, .-UART_Init
 108              		.section	.text.UART_Enable,"ax",%progbits
 109              		.align	2
 110              		.global	UART_Enable
 111              		.code	16
 112              		.thumb_func
 113              		.type	UART_Enable, %function
 114              	UART_Enable:
 115              	.LFB1:
 147:.\Generated_Source\PSoC4/UART.c **** {
 116              		.loc 1 147 0
 117              		.cfi_startproc
 118 0000 08B5     		push	{r3, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 3, -8
 121              		.cfi_offset 14, -4
 160:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
 122              		.loc 1 160 0
 123 0002 054B     		ldr	r3, .L6
 124 0004 1968     		ldr	r1, [r3]
 125 0006 8022     		mov	r2, #128
 126 0008 1206     		lsl	r2, r2, #24
 127 000a 0A43     		orr	r2, r1
 128 000c 1A60     		str	r2, [r3]
 162:.\Generated_Source\PSoC4/UART.c ****     UART_ScbEnableIntr();
 129              		.loc 1 162 0
 130 000e FFF7FEFF 		bl	UART_ScbEnableIntr
 131              	.LVL4:
 165:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
 132              		.loc 1 165 0
 133 0012 FFF7FEFF 		bl	UART_ScbModePostEnable
 134              	.LVL5:
 167:.\Generated_Source\PSoC4/UART.c **** }
 135              		.loc 1 167 0
 136              		@ sp needed
 137 0016 08BD     		pop	{r3, pc}
 138              	.L7:
 139              		.align	2
 140              	.L6:
 141 0018 00000740 		.word	1074200576
 142              		.cfi_endproc
 143              	.LFE1:
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 12


 144              		.size	UART_Enable, .-UART_Enable
 145              		.section	.text.UART_Start,"ax",%progbits
 146              		.align	2
 147              		.global	UART_Start
 148              		.code	16
 149              		.thumb_func
 150              		.type	UART_Start, %function
 151              	UART_Start:
 152              	.LFB2:
 193:.\Generated_Source\PSoC4/UART.c **** {
 153              		.loc 1 193 0
 154              		.cfi_startproc
 155 0000 08B5     		push	{r3, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 3, -8
 158              		.cfi_offset 14, -4
 194:.\Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 159              		.loc 1 194 0
 160 0002 064B     		ldr	r3, .L10
 161 0004 1B78     		ldrb	r3, [r3]
 162 0006 002B     		cmp	r3, #0
 163 0008 04D1     		bne	.L9
 196:.\Generated_Source\PSoC4/UART.c ****         UART_Init();
 164              		.loc 1 196 0
 165 000a FFF7FEFF 		bl	UART_Init
 166              	.LVL6:
 197:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 167              		.loc 1 197 0
 168 000e 0122     		mov	r2, #1
 169 0010 024B     		ldr	r3, .L10
 170 0012 1A70     		strb	r2, [r3]
 171              	.L9:
 200:.\Generated_Source\PSoC4/UART.c ****     UART_Enable();
 172              		.loc 1 200 0
 173 0014 FFF7FEFF 		bl	UART_Enable
 174              	.LVL7:
 201:.\Generated_Source\PSoC4/UART.c **** }
 175              		.loc 1 201 0
 176              		@ sp needed
 177 0018 08BD     		pop	{r3, pc}
 178              	.L11:
 179 001a C046     		.align	2
 180              	.L10:
 181 001c 00000000 		.word	.LANCHOR0
 182              		.cfi_endproc
 183              	.LFE2:
 184              		.size	UART_Start, .-UART_Start
 185              		.section	.text.UART_Stop,"ax",%progbits
 186              		.align	2
 187              		.global	UART_Stop
 188              		.code	16
 189              		.thumb_func
 190              		.type	UART_Stop, %function
 191              	UART_Stop:
 192              	.LFB3:
 222:.\Generated_Source\PSoC4/UART.c **** {
 193              		.loc 1 222 0
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 13


 194              		.cfi_startproc
 195 0000 08B5     		push	{r3, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 224:.\Generated_Source\PSoC4/UART.c ****     UART_DisableInt();
 199              		.loc 1 224 0
 200 0002 0B20     		mov	r0, #11
 201 0004 FFF7FEFF 		bl	CyIntDisable
 202              	.LVL8:
 228:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 203              		.loc 1 228 0
 204 0008 FFF7FEFF 		bl	UART_ScbModeStop
 205              	.LVL9:
 231:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 206              		.loc 1 231 0
 207 000c 054B     		ldr	r3, .L13
 208 000e 1A68     		ldr	r2, [r3]
 209 0010 5200     		lsl	r2, r2, #1
 210 0012 5208     		lsr	r2, r2, #1
 211 0014 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 212              		.loc 1 241 0
 213 0016 0022     		mov	r2, #0
 214 0018 034B     		ldr	r3, .L13+4
 215 001a 1A60     		str	r2, [r3]
 244:.\Generated_Source\PSoC4/UART.c ****     UART_ClearPendingInt();
 216              		.loc 1 244 0
 217 001c 0B20     		mov	r0, #11
 218 001e FFF7FEFF 		bl	CyIntClearPending
 219              	.LVL10:
 246:.\Generated_Source\PSoC4/UART.c **** }
 220              		.loc 1 246 0
 221              		@ sp needed
 222 0022 08BD     		pop	{r3, pc}
 223              	.L14:
 224              		.align	2
 225              	.L13:
 226 0024 00000740 		.word	1074200576
 227 0028 880F0740 		.word	1074204552
 228              		.cfi_endproc
 229              	.LFE3:
 230              		.size	UART_Stop, .-UART_Stop
 231              		.section	.text.UART_SetRxFifoLevel,"ax",%progbits
 232              		.align	2
 233              		.global	UART_SetRxFifoLevel
 234              		.code	16
 235              		.thumb_func
 236              		.type	UART_SetRxFifoLevel, %function
 237              	UART_SetRxFifoLevel:
 238              	.LFB4:
 267:.\Generated_Source\PSoC4/UART.c **** {
 239              		.loc 1 267 0
 240              		.cfi_startproc
 241              	.LVL11:
 270:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 242              		.loc 1 270 0
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 14


 243 0000 034B     		ldr	r3, .L16
 244 0002 1968     		ldr	r1, [r3]
 245              	.LVL12:
 272:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 246              		.loc 1 272 0
 247 0004 0722     		mov	r2, #7
 248 0006 9143     		bic	r1, r2
 249              	.LVL13:
 273:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 250              		.loc 1 273 0
 251 0008 0240     		and	r2, r0
 252 000a 0A43     		orr	r2, r1
 253              	.LVL14:
 275:.\Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 254              		.loc 1 275 0
 255 000c 1A60     		str	r2, [r3]
 276:.\Generated_Source\PSoC4/UART.c **** }
 256              		.loc 1 276 0
 257              		@ sp needed
 258 000e 7047     		bx	lr
 259              	.L17:
 260              		.align	2
 261              	.L16:
 262 0010 04030740 		.word	1074201348
 263              		.cfi_endproc
 264              	.LFE4:
 265              		.size	UART_SetRxFifoLevel, .-UART_SetRxFifoLevel
 266              		.section	.text.UART_SetTxFifoLevel,"ax",%progbits
 267              		.align	2
 268              		.global	UART_SetTxFifoLevel
 269              		.code	16
 270              		.thumb_func
 271              		.type	UART_SetTxFifoLevel, %function
 272              	UART_SetTxFifoLevel:
 273              	.LFB5:
 297:.\Generated_Source\PSoC4/UART.c **** {
 274              		.loc 1 297 0
 275              		.cfi_startproc
 276              	.LVL15:
 300:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 277              		.loc 1 300 0
 278 0000 034B     		ldr	r3, .L19
 279 0002 1968     		ldr	r1, [r3]
 280              	.LVL16:
 302:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 281              		.loc 1 302 0
 282 0004 0722     		mov	r2, #7
 283 0006 9143     		bic	r1, r2
 284              	.LVL17:
 303:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 285              		.loc 1 303 0
 286 0008 0240     		and	r2, r0
 287 000a 0A43     		orr	r2, r1
 288              	.LVL18:
 305:.\Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 289              		.loc 1 305 0
 290 000c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 15


 306:.\Generated_Source\PSoC4/UART.c **** }
 291              		.loc 1 306 0
 292              		@ sp needed
 293 000e 7047     		bx	lr
 294              	.L20:
 295              		.align	2
 296              	.L19:
 297 0010 04020740 		.word	1074201092
 298              		.cfi_endproc
 299              	.LFE5:
 300              		.size	UART_SetTxFifoLevel, .-UART_SetTxFifoLevel
 301              		.section	.text.UART_SetCustomInterruptHandler,"ax",%progbits
 302              		.align	2
 303              		.global	UART_SetCustomInterruptHandler
 304              		.code	16
 305              		.thumb_func
 306              		.type	UART_SetCustomInterruptHandler, %function
 307              	UART_SetCustomInterruptHandler:
 308              	.LFB6:
 333:.\Generated_Source\PSoC4/UART.c ****     {
 309              		.loc 1 333 0
 310              		.cfi_startproc
 311              	.LVL19:
 335:.\Generated_Source\PSoC4/UART.c ****         UART_customIntrHandler = func; /* Register interrupt handler */
 312              		.loc 1 335 0
 313 0000 014B     		ldr	r3, .L22
 314 0002 5860     		str	r0, [r3, #4]
 342:.\Generated_Source\PSoC4/UART.c ****     }
 315              		.loc 1 342 0
 316              		@ sp needed
 317 0004 7047     		bx	lr
 318              	.L23:
 319 0006 C046     		.align	2
 320              	.L22:
 321 0008 00000000 		.word	.LANCHOR0
 322              		.cfi_endproc
 323              	.LFE6:
 324              		.size	UART_SetCustomInterruptHandler, .-UART_SetCustomInterruptHandler
 325              		.section	.text.UART_I2CSlaveNackGeneration,"ax",%progbits
 326              		.align	2
 327              		.global	UART_I2CSlaveNackGeneration
 328              		.code	16
 329              		.thumb_func
 330              		.type	UART_I2CSlaveNackGeneration, %function
 331              	UART_I2CSlaveNackGeneration:
 332              	.LFB10:
 477:.\Generated_Source\PSoC4/UART.c **** 
 478:.\Generated_Source\PSoC4/UART.c **** 
 479:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 480:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 481:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetPins
 482:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 483:.\Generated_Source\PSoC4/UART.c ****     *
 484:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 485:.\Generated_Source\PSoC4/UART.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 486:.\Generated_Source\PSoC4/UART.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 487:.\Generated_Source\PSoC4/UART.c ****     *  initialization function calls it.
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 16


 488:.\Generated_Source\PSoC4/UART.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 489:.\Generated_Source\PSoC4/UART.c ****     *  is selected in design time.
 490:.\Generated_Source\PSoC4/UART.c ****     *
 491:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 492:.\Generated_Source\PSoC4/UART.c ****     *  mode:      Mode of SCB operation.
 493:.\Generated_Source\PSoC4/UART.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 494:.\Generated_Source\PSoC4/UART.c ****     *             modes.
 495:.\Generated_Source\PSoC4/UART.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 496:.\Generated_Source\PSoC4/UART.c ****     *
 497:.\Generated_Source\PSoC4/UART.c ****     * Return:
 498:.\Generated_Source\PSoC4/UART.c ****     *  None
 499:.\Generated_Source\PSoC4/UART.c ****     *
 500:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 501:.\Generated_Source\PSoC4/UART.c ****     void UART_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 502:.\Generated_Source\PSoC4/UART.c ****     {
 503:.\Generated_Source\PSoC4/UART.c ****         uint32 hsiomSel [UART_SCB_PINS_NUMBER];
 504:.\Generated_Source\PSoC4/UART.c ****         uint32 pinsDm   [UART_SCB_PINS_NUMBER];
 505:.\Generated_Source\PSoC4/UART.c **** 
 506:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 507:.\Generated_Source\PSoC4/UART.c ****         uint32 pinsInBuf = 0u;
 508:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 509:.\Generated_Source\PSoC4/UART.c **** 
 510:.\Generated_Source\PSoC4/UART.c ****         uint32 i;
 511:.\Generated_Source\PSoC4/UART.c **** 
 512:.\Generated_Source\PSoC4/UART.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 513:.\Generated_Source\PSoC4/UART.c ****         for (i = 0u; i < UART_SCB_PINS_NUMBER; i++)
 514:.\Generated_Source\PSoC4/UART.c ****         {
 515:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[i]  = UART_HSIOM_DEF_SEL;
 516:.\Generated_Source\PSoC4/UART.c ****             pinsDm[i]    = UART_PIN_DM_ALG_HIZ;
 517:.\Generated_Source\PSoC4/UART.c ****         }
 518:.\Generated_Source\PSoC4/UART.c **** 
 519:.\Generated_Source\PSoC4/UART.c ****         if ((UART_SCB_MODE_I2C   == mode) ||
 520:.\Generated_Source\PSoC4/UART.c ****            (UART_SCB_MODE_EZI2C == mode))
 521:.\Generated_Source\PSoC4/UART.c ****         {
 522:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_HSIOM_I2C_SEL;
 523:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_I2C_SEL;
 524:.\Generated_Source\PSoC4/UART.c **** 
 525:.\Generated_Source\PSoC4/UART.c ****             pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_OD_LO;
 526:.\Generated_Source\PSoC4/UART.c ****             pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 527:.\Generated_Source\PSoC4/UART.c ****         }
 528:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 529:.\Generated_Source\PSoC4/UART.c ****         else if (UART_SCB_MODE_SPI == mode)
 530:.\Generated_Source\PSoC4/UART.c ****         {
 531:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 532:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 533:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_SCLK_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 534:.\Generated_Source\PSoC4/UART.c **** 
 535:.\Generated_Source\PSoC4/UART.c ****             if (UART_SPI_SLAVE == subMode)
 536:.\Generated_Source\PSoC4/UART.c ****             {
 537:.\Generated_Source\PSoC4/UART.c ****                 /* Slave */
 538:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 539:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 540:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 541:.\Generated_Source\PSoC4/UART.c **** 
 542:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 543:.\Generated_Source\PSoC4/UART.c ****                 /* Only SS0 is valid choice for Slave */
 544:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_SS0_PIN_INDEX] = UART_HSIOM_SPI_SEL;
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 17


 545:.\Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 546:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 547:.\Generated_Source\PSoC4/UART.c **** 
 548:.\Generated_Source\PSoC4/UART.c ****             #if (UART_TX_SDA_MISO_PIN)
 549:.\Generated_Source\PSoC4/UART.c ****                 /* Disable input buffer */
 550:.\Generated_Source\PSoC4/UART.c ****                  pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 551:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_TX_SDA_MISO_PIN) */
 552:.\Generated_Source\PSoC4/UART.c ****             }
 553:.\Generated_Source\PSoC4/UART.c ****             else /* (Master) */
 554:.\Generated_Source\PSoC4/UART.c ****             {
 555:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_STRONG;
 556:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 557:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/UART.c **** 
 559:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 560:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS0_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 561:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 562:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS0_PIN_MASK;
 563:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 564:.\Generated_Source\PSoC4/UART.c **** 
 565:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS1_PIN)
 566:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS1_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 567:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS1_PIN_INDEX] = UART_PIN_DM_STRONG;
 568:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS1_PIN_MASK;
 569:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS1_PIN) */
 570:.\Generated_Source\PSoC4/UART.c **** 
 571:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS2_PIN)
 572:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS2_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 573:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS2_PIN_INDEX] = UART_PIN_DM_STRONG;
 574:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS2_PIN_MASK;
 575:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS2_PIN) */
 576:.\Generated_Source\PSoC4/UART.c **** 
 577:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS3_PIN)
 578:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS3_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 579:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS3_PIN_INDEX] = UART_PIN_DM_STRONG;
 580:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS3_PIN_MASK;
 581:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS3_PIN) */
 582:.\Generated_Source\PSoC4/UART.c **** 
 583:.\Generated_Source\PSoC4/UART.c ****                 /* Disable input buffers */
 584:.\Generated_Source\PSoC4/UART.c ****             #if (UART_RX_SCL_MOSI_PIN)
 585:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_SCL_MOSI_PIN_MASK;
 586:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RX_SCL_MOSI_PIN) */
 587:.\Generated_Source\PSoC4/UART.c **** 
 588:.\Generated_Source\PSoC4/UART.c ****              #if (UART_RX_WAKE_SCL_MOSI_PIN)
 589:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_WAKE_SCL_MOSI_PIN_MASK;
 590:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RX_WAKE_SCL_MOSI_PIN) */
 591:.\Generated_Source\PSoC4/UART.c **** 
 592:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SCLK_PIN)
 593:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SCLK_PIN_MASK;
 594:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SCLK_PIN) */
 595:.\Generated_Source\PSoC4/UART.c ****             }
 596:.\Generated_Source\PSoC4/UART.c ****         }
 597:.\Generated_Source\PSoC4/UART.c ****         else /* UART */
 598:.\Generated_Source\PSoC4/UART.c ****         {
 599:.\Generated_Source\PSoC4/UART.c ****             if (UART_UART_MODE_SMARTCARD == subMode)
 600:.\Generated_Source\PSoC4/UART.c ****             {
 601:.\Generated_Source\PSoC4/UART.c ****                 /* SmartCard */
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 18


 602:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_UART_SEL;
 603:.\Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 604:.\Generated_Source\PSoC4/UART.c ****             }
 605:.\Generated_Source\PSoC4/UART.c ****             else /* Standard or IrDA */
 606:.\Generated_Source\PSoC4/UART.c ****             {
 607:.\Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_RX_PIN_ENABLE & uartEnableMask))
 608:.\Generated_Source\PSoC4/UART.c ****                 {
 609:.\Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_HSIOM_UART_SEL;
 610:.\Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 611:.\Generated_Source\PSoC4/UART.c ****                 }
 612:.\Generated_Source\PSoC4/UART.c **** 
 613:.\Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_TX_PIN_ENABLE & uartEnableMask))
 614:.\Generated_Source\PSoC4/UART.c ****                 {
 615:.\Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_UART_SEL;
 616:.\Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 617:.\Generated_Source\PSoC4/UART.c **** 
 618:.\Generated_Source\PSoC4/UART.c ****                 #if (UART_TX_SDA_MISO_PIN)
 619:.\Generated_Source\PSoC4/UART.c ****                      pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 620:.\Generated_Source\PSoC4/UART.c ****                 #endif /* (UART_TX_SDA_MISO_PIN) */
 621:.\Generated_Source\PSoC4/UART.c ****                 }
 622:.\Generated_Source\PSoC4/UART.c **** 
 623:.\Generated_Source\PSoC4/UART.c ****             #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 624:.\Generated_Source\PSoC4/UART.c ****                 if (UART_UART_MODE_STD == subMode)
 625:.\Generated_Source\PSoC4/UART.c ****                 {
 626:.\Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_CTS_PIN_ENABLE & uartEnableMask))
 627:.\Generated_Source\PSoC4/UART.c ****                     {
 628:.\Generated_Source\PSoC4/UART.c ****                         /* CTS input is multiplexed with SCLK */
 629:.\Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SCLK_PIN_INDEX] = UART_HSIOM_UART_SEL;
 630:.\Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 631:.\Generated_Source\PSoC4/UART.c ****                     }
 632:.\Generated_Source\PSoC4/UART.c **** 
 633:.\Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_RTS_PIN_ENABLE & uartEnableMask))
 634:.\Generated_Source\PSoC4/UART.c ****                     {
 635:.\Generated_Source\PSoC4/UART.c ****                         /* RTS output is multiplexed with SS0 */
 636:.\Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SS0_PIN_INDEX] = UART_HSIOM_UART_SEL;
 637:.\Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 638:.\Generated_Source\PSoC4/UART.c **** 
 639:.\Generated_Source\PSoC4/UART.c ****                     #if (UART_SS0_PIN)
 640:.\Generated_Source\PSoC4/UART.c ****                         /* Disable input buffer */
 641:.\Generated_Source\PSoC4/UART.c ****                         pinsInBuf |= UART_SS0_PIN_MASK;
 642:.\Generated_Source\PSoC4/UART.c ****                     #endif /* (UART_SS0_PIN) */
 643:.\Generated_Source\PSoC4/UART.c ****                     }
 644:.\Generated_Source\PSoC4/UART.c ****                 }
 645:.\Generated_Source\PSoC4/UART.c ****             #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 646:.\Generated_Source\PSoC4/UART.c ****             }
 647:.\Generated_Source\PSoC4/UART.c ****         }
 648:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 649:.\Generated_Source\PSoC4/UART.c **** 
 650:.\Generated_Source\PSoC4/UART.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 651:.\Generated_Source\PSoC4/UART.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 652:.\Generated_Source\PSoC4/UART.c **** 
 653:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_WAKE_SCL_MOSI_PIN)
 654:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_WAKE_SCL_MOSI_HSIOM_REG,
 655:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 656:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_POS,
 657:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 658:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 19


 659:.\Generated_Source\PSoC4/UART.c ****         UART_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 660:.\Generated_Source\PSoC4/UART.c ****                                                                pinsDm[UART_RX_WAKE_SCL_MOSI_PIN_IND
 661:.\Generated_Source\PSoC4/UART.c **** 
 662:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 663:.\Generated_Source\PSoC4/UART.c ****                                      UART_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 664:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_RX_WAKE_SCL_MOSI_PIN_MASK)));
 665:.\Generated_Source\PSoC4/UART.c **** 
 666:.\Generated_Source\PSoC4/UART.c ****          /* Set interrupt on falling edge */
 667:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INCFG_TYPE(UART_RX_WAKE_SCL_MOSI_INTCFG_REG,
 668:.\Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 669:.\Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 670:.\Generated_Source\PSoC4/UART.c ****                                         UART_INTCFG_TYPE_FALLING_EDGE);
 671:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_WAKE_SCL_MOSI_PIN) */
 672:.\Generated_Source\PSoC4/UART.c **** 
 673:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_SCL_MOSI_PIN)
 674:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_SCL_MOSI_HSIOM_REG,
 675:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_MASK,
 676:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_POS,
 677:.\Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX]);
 678:.\Generated_Source\PSoC4/UART.c **** 
 679:.\Generated_Source\PSoC4/UART.c ****         UART_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_RX_SCL_MOSI_PIN_INDEX]);
 680:.\Generated_Source\PSoC4/UART.c **** 
 681:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 682:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 683:.\Generated_Source\PSoC4/UART.c ****                                      UART_uart_rx_i2c_scl_spi_mosi_MASK,
 684:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_RX_SCL_MOSI_PIN_MASK)));
 685:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 686:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_SCL_MOSI_PIN) */
 687:.\Generated_Source\PSoC4/UART.c **** 
 688:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 689:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG,
 690:.\Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_MASK,
 691:.\Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_POS,
 692:.\Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_TX_SDA_MISO_PIN_INDEX]);
 693:.\Generated_Source\PSoC4/UART.c **** 
 694:.\Generated_Source\PSoC4/UART.c ****         UART_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_TX_SDA_MISO_PIN_INDEX]);
 695:.\Generated_Source\PSoC4/UART.c **** 
 696:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 697:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_tx_i2c_sda_spi_miso_INP_DIS,
 698:.\Generated_Source\PSoC4/UART.c ****                                      UART_uart_tx_i2c_sda_spi_miso_MASK,
 699:.\Generated_Source\PSoC4/UART.c ****                                     (0u != (pinsInBuf & UART_TX_SDA_MISO_PIN_MASK)));
 700:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 701:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_SCL_MOSI_PIN) */
 702:.\Generated_Source\PSoC4/UART.c **** 
 703:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SCLK_PIN)
 704:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SCLK_HSIOM_REG,
 705:.\Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_MASK,
 706:.\Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_POS,
 707:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SCLK_PIN_INDEX]);
 708:.\Generated_Source\PSoC4/UART.c **** 
 709:.\Generated_Source\PSoC4/UART.c ****         UART_spi_sclk_SetDriveMode((uint8) pinsDm[UART_SCLK_PIN_INDEX]);
 710:.\Generated_Source\PSoC4/UART.c **** 
 711:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_sclk_INP_DIS,
 712:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_sclk_MASK,
 713:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SCLK_PIN_MASK)));
 714:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCLK_PIN) */
 715:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 20


 716:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS0_PIN)
 717:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG,
 718:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_MASK,
 719:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_POS,
 720:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS0_PIN_INDEX]);
 721:.\Generated_Source\PSoC4/UART.c **** 
 722:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss0_SetDriveMode((uint8) pinsDm[UART_SS0_PIN_INDEX]);
 723:.\Generated_Source\PSoC4/UART.c **** 
 724:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss0_INP_DIS,
 725:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss0_MASK,
 726:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS0_PIN_MASK)));
 727:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS0_PIN) */
 728:.\Generated_Source\PSoC4/UART.c **** 
 729:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS1_PIN)
 730:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS1_HSIOM_REG,
 731:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_MASK,
 732:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_POS,
 733:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS1_PIN_INDEX]);
 734:.\Generated_Source\PSoC4/UART.c **** 
 735:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss1_SetDriveMode((uint8) pinsDm[UART_SS1_PIN_INDEX]);
 736:.\Generated_Source\PSoC4/UART.c **** 
 737:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss1_INP_DIS,
 738:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss1_MASK,
 739:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS1_PIN_MASK)));
 740:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS1_PIN) */
 741:.\Generated_Source\PSoC4/UART.c **** 
 742:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS2_PIN)
 743:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS2_HSIOM_REG,
 744:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_MASK,
 745:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_POS,
 746:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS2_PIN_INDEX]);
 747:.\Generated_Source\PSoC4/UART.c **** 
 748:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss2_SetDriveMode((uint8) pinsDm[UART_SS2_PIN_INDEX]);
 749:.\Generated_Source\PSoC4/UART.c **** 
 750:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss2_INP_DIS,
 751:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss2_MASK,
 752:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS2_PIN_MASK)));
 753:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS2_PIN) */
 754:.\Generated_Source\PSoC4/UART.c **** 
 755:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS3_PIN)
 756:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS3_HSIOM_REG,
 757:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_MASK,
 758:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_POS,
 759:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS3_PIN_INDEX]);
 760:.\Generated_Source\PSoC4/UART.c **** 
 761:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss3_SetDriveMode((uint8) pinsDm[UART_SS3_PIN_INDEX]);
 762:.\Generated_Source\PSoC4/UART.c **** 
 763:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss3_INP_DIS,
 764:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss3_MASK,
 765:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS3_PIN_MASK)));
 766:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS3_PIN) */
 767:.\Generated_Source\PSoC4/UART.c ****     }
 768:.\Generated_Source\PSoC4/UART.c **** 
 769:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 770:.\Generated_Source\PSoC4/UART.c **** 
 771:.\Generated_Source\PSoC4/UART.c **** 
 772:.\Generated_Source\PSoC4/UART.c **** #if (UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 21


 773:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_I2CSlaveNackGeneration
 775:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC4/UART.c ****     *
 777:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 778:.\Generated_Source\PSoC4/UART.c ****     *  Sets command to generate NACK to the address or data.
 779:.\Generated_Source\PSoC4/UART.c ****     *
 780:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 781:.\Generated_Source\PSoC4/UART.c ****     *  None
 782:.\Generated_Source\PSoC4/UART.c ****     *
 783:.\Generated_Source\PSoC4/UART.c ****     * Return:
 784:.\Generated_Source\PSoC4/UART.c ****     *  None
 785:.\Generated_Source\PSoC4/UART.c ****     *
 786:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 787:.\Generated_Source\PSoC4/UART.c ****     void UART_I2CSlaveNackGeneration(void)
 788:.\Generated_Source\PSoC4/UART.c ****     {
 333              		.loc 1 788 0
 334              		.cfi_startproc
 789:.\Generated_Source\PSoC4/UART.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 790:.\Generated_Source\PSoC4/UART.c ****         if ((0u != (UART_CTRL_REG & UART_CTRL_EC_AM_MODE)) &&
 335              		.loc 1 790 0
 336 0000 0A4B     		ldr	r3, .L26
 337 0002 1B68     		ldr	r3, [r3]
 338 0004 DA05     		lsl	r2, r3, #23
 339 0006 0DD5     		bpl	.L25
 791:.\Generated_Source\PSoC4/UART.c ****             (0u == (UART_I2C_CTRL_REG & UART_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 340              		.loc 1 791 0 discriminator 1
 341 0008 094B     		ldr	r3, .L26+4
 342 000a 1B68     		ldr	r3, [r3]
 790:.\Generated_Source\PSoC4/UART.c ****         if ((0u != (UART_CTRL_REG & UART_CTRL_EC_AM_MODE)) &&
 343              		.loc 1 790 0 discriminator 1
 344 000c 5A04     		lsl	r2, r3, #17
 345 000e 09D4     		bmi	.L25
 792:.\Generated_Source\PSoC4/UART.c ****         {
 793:.\Generated_Source\PSoC4/UART.c ****             /* Toggle EC_AM before NACK generation */
 794:.\Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG &= ~UART_CTRL_EC_AM_MODE;
 346              		.loc 1 794 0
 347 0010 064B     		ldr	r3, .L26
 348 0012 1968     		ldr	r1, [r3]
 349 0014 074A     		ldr	r2, .L26+8
 350 0016 0A40     		and	r2, r1
 351 0018 1A60     		str	r2, [r3]
 795:.\Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG |=  UART_CTRL_EC_AM_MODE;
 352              		.loc 1 795 0
 353 001a 1968     		ldr	r1, [r3]
 354 001c 8022     		mov	r2, #128
 355 001e 5200     		lsl	r2, r2, #1
 356 0020 0A43     		orr	r2, r1
 357 0022 1A60     		str	r2, [r3]
 358              	.L25:
 796:.\Generated_Source\PSoC4/UART.c ****         }
 797:.\Generated_Source\PSoC4/UART.c **** 
 798:.\Generated_Source\PSoC4/UART.c ****         UART_I2C_SLAVE_CMD_REG = UART_I2C_SLAVE_CMD_S_NACK;
 359              		.loc 1 798 0
 360 0024 0222     		mov	r2, #2
 361 0026 044B     		ldr	r3, .L26+12
 362 0028 1A60     		str	r2, [r3]
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 22


 799:.\Generated_Source\PSoC4/UART.c ****     }
 363              		.loc 1 799 0
 364              		@ sp needed
 365 002a 7047     		bx	lr
 366              	.L27:
 367              		.align	2
 368              	.L26:
 369 002c 00000740 		.word	1074200576
 370 0030 60000740 		.word	1074200672
 371 0034 FFFEFFFF 		.word	-257
 372 0038 6C000740 		.word	1074200684
 373              		.cfi_endproc
 374              	.LFE10:
 375              		.size	UART_I2CSlaveNackGeneration, .-UART_I2CSlaveNackGeneration
 376              		.global	UART_customIntrHandler
 377              		.global	UART_initVar
 378              		.bss
 379              		.align	2
 380              		.set	.LANCHOR0,. + 0
 381              		.type	UART_initVar, %object
 382              		.size	UART_initVar, 1
 383              	UART_initVar:
 384 0000 00       		.space	1
 385 0001 000000   		.space	3
 386              		.type	UART_customIntrHandler, %object
 387              		.size	UART_customIntrHandler, 4
 388              	UART_customIntrHandler:
 389 0004 00000000 		.space	4
 390              		.text
 391              	.Letext0:
 392              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 393              		.file 3 ".\\Generated_Source\\PSoC4\\UART_SPI_UART_PVT.h"
 394              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 395              		.section	.debug_info,"",%progbits
 396              	.Ldebug_info0:
 397 0000 CF020000 		.4byte	0x2cf
 398 0004 0400     		.2byte	0x4
 399 0006 00000000 		.4byte	.Ldebug_abbrev0
 400 000a 04       		.byte	0x4
 401 000b 01       		.uleb128 0x1
 402 000c BB010000 		.4byte	.LASF37
 403 0010 01       		.byte	0x1
 404 0011 58010000 		.4byte	.LASF38
 405 0015 55000000 		.4byte	.LASF39
 406 0019 00000000 		.4byte	.Ldebug_ranges0+0
 407 001d 00000000 		.4byte	0
 408 0021 00000000 		.4byte	.Ldebug_line0
 409 0025 02       		.uleb128 0x2
 410 0026 01       		.byte	0x1
 411 0027 06       		.byte	0x6
 412 0028 E4020000 		.4byte	.LASF0
 413 002c 02       		.uleb128 0x2
 414 002d 01       		.byte	0x1
 415 002e 08       		.byte	0x8
 416 002f C9000000 		.4byte	.LASF1
 417 0033 02       		.uleb128 0x2
 418 0034 02       		.byte	0x2
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 23


 419 0035 05       		.byte	0x5
 420 0036 90020000 		.4byte	.LASF2
 421 003a 02       		.uleb128 0x2
 422 003b 02       		.byte	0x2
 423 003c 07       		.byte	0x7
 424 003d 42000000 		.4byte	.LASF3
 425 0041 02       		.uleb128 0x2
 426 0042 04       		.byte	0x4
 427 0043 05       		.byte	0x5
 428 0044 CF020000 		.4byte	.LASF4
 429 0048 02       		.uleb128 0x2
 430 0049 04       		.byte	0x4
 431 004a 07       		.byte	0x7
 432 004b F5000000 		.4byte	.LASF5
 433 004f 02       		.uleb128 0x2
 434 0050 08       		.byte	0x8
 435 0051 05       		.byte	0x5
 436 0052 5C020000 		.4byte	.LASF6
 437 0056 02       		.uleb128 0x2
 438 0057 08       		.byte	0x8
 439 0058 07       		.byte	0x7
 440 0059 A4010000 		.4byte	.LASF7
 441 005d 03       		.uleb128 0x3
 442 005e 04       		.byte	0x4
 443 005f 05       		.byte	0x5
 444 0060 696E7400 		.ascii	"int\000"
 445 0064 02       		.uleb128 0x2
 446 0065 04       		.byte	0x4
 447 0066 07       		.byte	0x7
 448 0067 89010000 		.4byte	.LASF8
 449 006b 04       		.uleb128 0x4
 450 006c 15010000 		.4byte	.LASF9
 451 0070 02       		.byte	0x2
 452 0071 B3       		.byte	0xb3
 453 0072 2C000000 		.4byte	0x2c
 454 0076 04       		.uleb128 0x4
 455 0077 51010000 		.4byte	.LASF10
 456 007b 02       		.byte	0x2
 457 007c B5       		.byte	0xb5
 458 007d 48000000 		.4byte	0x48
 459 0081 02       		.uleb128 0x2
 460 0082 04       		.byte	0x4
 461 0083 04       		.byte	0x4
 462 0084 B7000000 		.4byte	.LASF11
 463 0088 02       		.uleb128 0x2
 464 0089 08       		.byte	0x8
 465 008a 04       		.byte	0x4
 466 008b 26010000 		.4byte	.LASF12
 467 008f 02       		.uleb128 0x2
 468 0090 01       		.byte	0x1
 469 0091 08       		.byte	0x8
 470 0092 7E020000 		.4byte	.LASF13
 471 0096 05       		.uleb128 0x5
 472 0097 00000000 		.4byte	.LASF14
 473 009b 02       		.byte	0x2
 474 009c 5F01     		.2byte	0x15f
 475 009e A2000000 		.4byte	0xa2
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 24


 476 00a2 06       		.uleb128 0x6
 477 00a3 76000000 		.4byte	0x76
 478 00a7 07       		.uleb128 0x7
 479 00a8 04       		.byte	0x4
 480 00a9 AD000000 		.4byte	0xad
 481 00ad 08       		.uleb128 0x8
 482 00ae 02       		.uleb128 0x2
 483 00af 04       		.byte	0x4
 484 00b0 07       		.byte	0x7
 485 00b1 53020000 		.4byte	.LASF15
 486 00b5 09       		.uleb128 0x9
 487 00b6 9A020000 		.4byte	.LASF16
 488 00ba 01       		.byte	0x1
 489 00bb 6801     		.2byte	0x168
 490 00bd 00000000 		.4byte	.LFB7
 491 00c1 0A000000 		.4byte	.LFE7-.LFB7
 492 00c5 01       		.uleb128 0x1
 493 00c6 9C       		.byte	0x9c
 494 00c7 DB000000 		.4byte	0xdb
 495 00cb 0A       		.uleb128 0xa
 496 00cc 08000000 		.4byte	.LVL0
 497 00d0 8E020000 		.4byte	0x28e
 498 00d4 0B       		.uleb128 0xb
 499 00d5 01       		.uleb128 0x1
 500 00d6 50       		.byte	0x50
 501 00d7 01       		.uleb128 0x1
 502 00d8 3B       		.byte	0x3b
 503 00d9 00       		.byte	0
 504 00da 00       		.byte	0
 505 00db 09       		.uleb128 0x9
 506 00dc AD020000 		.4byte	.LASF17
 507 00e0 01       		.byte	0x1
 508 00e1 8801     		.2byte	0x188
 509 00e3 00000000 		.4byte	.LFB8
 510 00e7 08000000 		.4byte	.LFE8-.LFB8
 511 00eb 01       		.uleb128 0x1
 512 00ec 9C       		.byte	0x9c
 513 00ed FB000000 		.4byte	0xfb
 514 00f1 0C       		.uleb128 0xc
 515 00f2 06000000 		.4byte	.LVL1
 516 00f6 9F020000 		.4byte	0x29f
 517 00fa 00       		.byte	0
 518 00fb 09       		.uleb128 0x9
 519 00fc 78010000 		.4byte	.LASF18
 520 0100 01       		.byte	0x1
 521 0101 B401     		.2byte	0x1b4
 522 0103 00000000 		.4byte	.LFB9
 523 0107 08000000 		.4byte	.LFE9-.LFB9
 524 010b 01       		.uleb128 0x1
 525 010c 9C       		.byte	0x9c
 526 010d 1B010000 		.4byte	0x11b
 527 0111 0C       		.uleb128 0xc
 528 0112 06000000 		.4byte	.LVL2
 529 0116 A6020000 		.4byte	0x2a6
 530 011a 00       		.byte	0
 531 011b 0D       		.uleb128 0xd
 532 011c D7000000 		.4byte	.LASF19
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 25


 533 0120 01       		.byte	0x1
 534 0121 66       		.byte	0x66
 535 0122 00000000 		.4byte	.LFB0
 536 0126 08000000 		.4byte	.LFE0-.LFB0
 537 012a 01       		.uleb128 0x1
 538 012b 9C       		.byte	0x9c
 539 012c 3A010000 		.4byte	0x13a
 540 0130 0C       		.uleb128 0xc
 541 0131 06000000 		.4byte	.LVL3
 542 0135 AD020000 		.4byte	0x2ad
 543 0139 00       		.byte	0
 544 013a 0D       		.uleb128 0xd
 545 013b BD000000 		.4byte	.LASF20
 546 013f 01       		.byte	0x1
 547 0140 92       		.byte	0x92
 548 0141 00000000 		.4byte	.LFB1
 549 0145 1C000000 		.4byte	.LFE1-.LFB1
 550 0149 01       		.uleb128 0x1
 551 014a 9C       		.byte	0x9c
 552 014b 62010000 		.4byte	0x162
 553 014f 0C       		.uleb128 0xc
 554 0150 12000000 		.4byte	.LVL4
 555 0154 B5000000 		.4byte	0xb5
 556 0158 0C       		.uleb128 0xc
 557 0159 16000000 		.4byte	.LVL5
 558 015d DB000000 		.4byte	0xdb
 559 0161 00       		.byte	0
 560 0162 0D       		.uleb128 0xd
 561 0163 1B010000 		.4byte	.LASF21
 562 0167 01       		.byte	0x1
 563 0168 C0       		.byte	0xc0
 564 0169 00000000 		.4byte	.LFB2
 565 016d 20000000 		.4byte	.LFE2-.LFB2
 566 0171 01       		.uleb128 0x1
 567 0172 9C       		.byte	0x9c
 568 0173 8A010000 		.4byte	0x18a
 569 0177 0C       		.uleb128 0xc
 570 0178 0E000000 		.4byte	.LVL6
 571 017c 1B010000 		.4byte	0x11b
 572 0180 0C       		.uleb128 0xc
 573 0181 18000000 		.4byte	.LVL7
 574 0185 3A010000 		.4byte	0x13a
 575 0189 00       		.byte	0
 576 018a 0D       		.uleb128 0xd
 577 018b 37020000 		.4byte	.LASF22
 578 018f 01       		.byte	0x1
 579 0190 DD       		.byte	0xdd
 580 0191 00000000 		.4byte	.LFB3
 581 0195 2C000000 		.4byte	.LFE3-.LFB3
 582 0199 01       		.uleb128 0x1
 583 019a 9C       		.byte	0x9c
 584 019b CB010000 		.4byte	0x1cb
 585 019f 0E       		.uleb128 0xe
 586 01a0 08000000 		.4byte	.LVL8
 587 01a4 B4020000 		.4byte	0x2b4
 588 01a8 B2010000 		.4byte	0x1b2
 589 01ac 0B       		.uleb128 0xb
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 26


 590 01ad 01       		.uleb128 0x1
 591 01ae 50       		.byte	0x50
 592 01af 01       		.uleb128 0x1
 593 01b0 3B       		.byte	0x3b
 594 01b1 00       		.byte	0
 595 01b2 0C       		.uleb128 0xc
 596 01b3 0C000000 		.4byte	.LVL9
 597 01b7 FB000000 		.4byte	0xfb
 598 01bb 0A       		.uleb128 0xa
 599 01bc 22000000 		.4byte	.LVL10
 600 01c0 C5020000 		.4byte	0x2c5
 601 01c4 0B       		.uleb128 0xb
 602 01c5 01       		.uleb128 0x1
 603 01c6 50       		.byte	0x50
 604 01c7 01       		.uleb128 0x1
 605 01c8 3B       		.byte	0x3b
 606 01c9 00       		.byte	0
 607 01ca 00       		.byte	0
 608 01cb 0F       		.uleb128 0xf
 609 01cc 6A020000 		.4byte	.LASF23
 610 01d0 01       		.byte	0x1
 611 01d1 0A01     		.2byte	0x10a
 612 01d3 00000000 		.4byte	.LFB4
 613 01d7 14000000 		.4byte	.LFE4-.LFB4
 614 01db 01       		.uleb128 0x1
 615 01dc 9C       		.byte	0x9c
 616 01dd 00020000 		.4byte	0x200
 617 01e1 10       		.uleb128 0x10
 618 01e2 25000000 		.4byte	.LASF25
 619 01e6 01       		.byte	0x1
 620 01e7 0A01     		.2byte	0x10a
 621 01e9 76000000 		.4byte	0x76
 622 01ed 01       		.uleb128 0x1
 623 01ee 50       		.byte	0x50
 624 01ef 11       		.uleb128 0x11
 625 01f0 C4020000 		.4byte	.LASF26
 626 01f4 01       		.byte	0x1
 627 01f5 0C01     		.2byte	0x10c
 628 01f7 76000000 		.4byte	0x76
 629 01fb 00000000 		.4byte	.LLST0
 630 01ff 00       		.byte	0
 631 0200 0F       		.uleb128 0xf
 632 0201 11000000 		.4byte	.LASF24
 633 0205 01       		.byte	0x1
 634 0206 2801     		.2byte	0x128
 635 0208 00000000 		.4byte	.LFB5
 636 020c 14000000 		.4byte	.LFE5-.LFB5
 637 0210 01       		.uleb128 0x1
 638 0211 9C       		.byte	0x9c
 639 0212 35020000 		.4byte	0x235
 640 0216 10       		.uleb128 0x10
 641 0217 25000000 		.4byte	.LASF25
 642 021b 01       		.byte	0x1
 643 021c 2801     		.2byte	0x128
 644 021e 76000000 		.4byte	0x76
 645 0222 01       		.uleb128 0x1
 646 0223 50       		.byte	0x50
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 27


 647 0224 11       		.uleb128 0x11
 648 0225 06000000 		.4byte	.LASF27
 649 0229 01       		.byte	0x1
 650 022a 2A01     		.2byte	0x12a
 651 022c 76000000 		.4byte	0x76
 652 0230 1E000000 		.4byte	.LLST1
 653 0234 00       		.byte	0
 654 0235 0F       		.uleb128 0xf
 655 0236 32010000 		.4byte	.LASF28
 656 023a 01       		.byte	0x1
 657 023b 4C01     		.2byte	0x14c
 658 023d 00000000 		.4byte	.LFB6
 659 0241 0C000000 		.4byte	.LFE6-.LFB6
 660 0245 01       		.uleb128 0x1
 661 0246 9C       		.byte	0x9c
 662 0247 5A020000 		.4byte	0x25a
 663 024b 10       		.uleb128 0x10
 664 024c 2D010000 		.4byte	.LASF29
 665 0250 01       		.byte	0x1
 666 0251 4C01     		.2byte	0x14c
 667 0253 A7000000 		.4byte	0xa7
 668 0257 01       		.uleb128 0x1
 669 0258 50       		.byte	0x50
 670 0259 00       		.byte	0
 671 025a 12       		.uleb128 0x12
 672 025b F0020000 		.4byte	.LASF40
 673 025f 01       		.byte	0x1
 674 0260 1303     		.2byte	0x313
 675 0262 00000000 		.4byte	.LFB10
 676 0266 3C000000 		.4byte	.LFE10-.LFB10
 677 026a 01       		.uleb128 0x1
 678 026b 9C       		.byte	0x9c
 679 026c 13       		.uleb128 0x13
 680 026d AA000000 		.4byte	.LASF30
 681 0271 01       		.byte	0x1
 682 0272 42       		.byte	0x42
 683 0273 6B000000 		.4byte	0x6b
 684 0277 05       		.uleb128 0x5
 685 0278 03       		.byte	0x3
 686 0279 00000000 		.4byte	UART_initVar
 687 027d 13       		.uleb128 0x13
 688 027e 2B000000 		.4byte	.LASF31
 689 0282 01       		.byte	0x1
 690 0283 46       		.byte	0x46
 691 0284 A7000000 		.4byte	0xa7
 692 0288 05       		.uleb128 0x5
 693 0289 03       		.byte	0x3
 694 028a 00000000 		.4byte	UART_customIntrHandler
 695 028e 14       		.uleb128 0x14
 696 028f D8020000 		.4byte	.LASF35
 697 0293 04       		.byte	0x4
 698 0294 4C       		.byte	0x4c
 699 0295 9F020000 		.4byte	0x29f
 700 0299 15       		.uleb128 0x15
 701 029a 6B000000 		.4byte	0x6b
 702 029e 00       		.byte	0
 703 029f 16       		.uleb128 0x16
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 28


 704 02a0 E1000000 		.4byte	.LASF32
 705 02a4 03       		.byte	0x3
 706 02a5 41       		.byte	0x41
 707 02a6 16       		.uleb128 0x16
 708 02a7 07010000 		.4byte	.LASF33
 709 02ab 03       		.byte	0x3
 710 02ac 42       		.byte	0x42
 711 02ad 16       		.uleb128 0x16
 712 02ae 96010000 		.4byte	.LASF34
 713 02b2 03       		.byte	0x3
 714 02b3 45       		.byte	0x45
 715 02b4 14       		.uleb128 0x14
 716 02b5 83020000 		.4byte	.LASF36
 717 02b9 04       		.byte	0x4
 718 02ba 4E       		.byte	0x4e
 719 02bb C5020000 		.4byte	0x2c5
 720 02bf 15       		.uleb128 0x15
 721 02c0 6B000000 		.4byte	0x6b
 722 02c4 00       		.byte	0
 723 02c5 17       		.uleb128 0x17
 724 02c6 41020000 		.4byte	.LASF41
 725 02ca 04       		.byte	0x4
 726 02cb 51       		.byte	0x51
 727 02cc 15       		.uleb128 0x15
 728 02cd 6B000000 		.4byte	0x6b
 729 02d1 00       		.byte	0
 730 02d2 00       		.byte	0
 731              		.section	.debug_abbrev,"",%progbits
 732              	.Ldebug_abbrev0:
 733 0000 01       		.uleb128 0x1
 734 0001 11       		.uleb128 0x11
 735 0002 01       		.byte	0x1
 736 0003 25       		.uleb128 0x25
 737 0004 0E       		.uleb128 0xe
 738 0005 13       		.uleb128 0x13
 739 0006 0B       		.uleb128 0xb
 740 0007 03       		.uleb128 0x3
 741 0008 0E       		.uleb128 0xe
 742 0009 1B       		.uleb128 0x1b
 743 000a 0E       		.uleb128 0xe
 744 000b 55       		.uleb128 0x55
 745 000c 17       		.uleb128 0x17
 746 000d 11       		.uleb128 0x11
 747 000e 01       		.uleb128 0x1
 748 000f 10       		.uleb128 0x10
 749 0010 17       		.uleb128 0x17
 750 0011 00       		.byte	0
 751 0012 00       		.byte	0
 752 0013 02       		.uleb128 0x2
 753 0014 24       		.uleb128 0x24
 754 0015 00       		.byte	0
 755 0016 0B       		.uleb128 0xb
 756 0017 0B       		.uleb128 0xb
 757 0018 3E       		.uleb128 0x3e
 758 0019 0B       		.uleb128 0xb
 759 001a 03       		.uleb128 0x3
 760 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 29


 761 001c 00       		.byte	0
 762 001d 00       		.byte	0
 763 001e 03       		.uleb128 0x3
 764 001f 24       		.uleb128 0x24
 765 0020 00       		.byte	0
 766 0021 0B       		.uleb128 0xb
 767 0022 0B       		.uleb128 0xb
 768 0023 3E       		.uleb128 0x3e
 769 0024 0B       		.uleb128 0xb
 770 0025 03       		.uleb128 0x3
 771 0026 08       		.uleb128 0x8
 772 0027 00       		.byte	0
 773 0028 00       		.byte	0
 774 0029 04       		.uleb128 0x4
 775 002a 16       		.uleb128 0x16
 776 002b 00       		.byte	0
 777 002c 03       		.uleb128 0x3
 778 002d 0E       		.uleb128 0xe
 779 002e 3A       		.uleb128 0x3a
 780 002f 0B       		.uleb128 0xb
 781 0030 3B       		.uleb128 0x3b
 782 0031 0B       		.uleb128 0xb
 783 0032 49       		.uleb128 0x49
 784 0033 13       		.uleb128 0x13
 785 0034 00       		.byte	0
 786 0035 00       		.byte	0
 787 0036 05       		.uleb128 0x5
 788 0037 16       		.uleb128 0x16
 789 0038 00       		.byte	0
 790 0039 03       		.uleb128 0x3
 791 003a 0E       		.uleb128 0xe
 792 003b 3A       		.uleb128 0x3a
 793 003c 0B       		.uleb128 0xb
 794 003d 3B       		.uleb128 0x3b
 795 003e 05       		.uleb128 0x5
 796 003f 49       		.uleb128 0x49
 797 0040 13       		.uleb128 0x13
 798 0041 00       		.byte	0
 799 0042 00       		.byte	0
 800 0043 06       		.uleb128 0x6
 801 0044 35       		.uleb128 0x35
 802 0045 00       		.byte	0
 803 0046 49       		.uleb128 0x49
 804 0047 13       		.uleb128 0x13
 805 0048 00       		.byte	0
 806 0049 00       		.byte	0
 807 004a 07       		.uleb128 0x7
 808 004b 0F       		.uleb128 0xf
 809 004c 00       		.byte	0
 810 004d 0B       		.uleb128 0xb
 811 004e 0B       		.uleb128 0xb
 812 004f 49       		.uleb128 0x49
 813 0050 13       		.uleb128 0x13
 814 0051 00       		.byte	0
 815 0052 00       		.byte	0
 816 0053 08       		.uleb128 0x8
 817 0054 15       		.uleb128 0x15
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 30


 818 0055 00       		.byte	0
 819 0056 27       		.uleb128 0x27
 820 0057 19       		.uleb128 0x19
 821 0058 00       		.byte	0
 822 0059 00       		.byte	0
 823 005a 09       		.uleb128 0x9
 824 005b 2E       		.uleb128 0x2e
 825 005c 01       		.byte	0x1
 826 005d 03       		.uleb128 0x3
 827 005e 0E       		.uleb128 0xe
 828 005f 3A       		.uleb128 0x3a
 829 0060 0B       		.uleb128 0xb
 830 0061 3B       		.uleb128 0x3b
 831 0062 05       		.uleb128 0x5
 832 0063 27       		.uleb128 0x27
 833 0064 19       		.uleb128 0x19
 834 0065 11       		.uleb128 0x11
 835 0066 01       		.uleb128 0x1
 836 0067 12       		.uleb128 0x12
 837 0068 06       		.uleb128 0x6
 838 0069 40       		.uleb128 0x40
 839 006a 18       		.uleb128 0x18
 840 006b 9742     		.uleb128 0x2117
 841 006d 19       		.uleb128 0x19
 842 006e 01       		.uleb128 0x1
 843 006f 13       		.uleb128 0x13
 844 0070 00       		.byte	0
 845 0071 00       		.byte	0
 846 0072 0A       		.uleb128 0xa
 847 0073 898201   		.uleb128 0x4109
 848 0076 01       		.byte	0x1
 849 0077 11       		.uleb128 0x11
 850 0078 01       		.uleb128 0x1
 851 0079 31       		.uleb128 0x31
 852 007a 13       		.uleb128 0x13
 853 007b 00       		.byte	0
 854 007c 00       		.byte	0
 855 007d 0B       		.uleb128 0xb
 856 007e 8A8201   		.uleb128 0x410a
 857 0081 00       		.byte	0
 858 0082 02       		.uleb128 0x2
 859 0083 18       		.uleb128 0x18
 860 0084 9142     		.uleb128 0x2111
 861 0086 18       		.uleb128 0x18
 862 0087 00       		.byte	0
 863 0088 00       		.byte	0
 864 0089 0C       		.uleb128 0xc
 865 008a 898201   		.uleb128 0x4109
 866 008d 00       		.byte	0
 867 008e 11       		.uleb128 0x11
 868 008f 01       		.uleb128 0x1
 869 0090 31       		.uleb128 0x31
 870 0091 13       		.uleb128 0x13
 871 0092 00       		.byte	0
 872 0093 00       		.byte	0
 873 0094 0D       		.uleb128 0xd
 874 0095 2E       		.uleb128 0x2e
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 31


 875 0096 01       		.byte	0x1
 876 0097 3F       		.uleb128 0x3f
 877 0098 19       		.uleb128 0x19
 878 0099 03       		.uleb128 0x3
 879 009a 0E       		.uleb128 0xe
 880 009b 3A       		.uleb128 0x3a
 881 009c 0B       		.uleb128 0xb
 882 009d 3B       		.uleb128 0x3b
 883 009e 0B       		.uleb128 0xb
 884 009f 27       		.uleb128 0x27
 885 00a0 19       		.uleb128 0x19
 886 00a1 11       		.uleb128 0x11
 887 00a2 01       		.uleb128 0x1
 888 00a3 12       		.uleb128 0x12
 889 00a4 06       		.uleb128 0x6
 890 00a5 40       		.uleb128 0x40
 891 00a6 18       		.uleb128 0x18
 892 00a7 9742     		.uleb128 0x2117
 893 00a9 19       		.uleb128 0x19
 894 00aa 01       		.uleb128 0x1
 895 00ab 13       		.uleb128 0x13
 896 00ac 00       		.byte	0
 897 00ad 00       		.byte	0
 898 00ae 0E       		.uleb128 0xe
 899 00af 898201   		.uleb128 0x4109
 900 00b2 01       		.byte	0x1
 901 00b3 11       		.uleb128 0x11
 902 00b4 01       		.uleb128 0x1
 903 00b5 31       		.uleb128 0x31
 904 00b6 13       		.uleb128 0x13
 905 00b7 01       		.uleb128 0x1
 906 00b8 13       		.uleb128 0x13
 907 00b9 00       		.byte	0
 908 00ba 00       		.byte	0
 909 00bb 0F       		.uleb128 0xf
 910 00bc 2E       		.uleb128 0x2e
 911 00bd 01       		.byte	0x1
 912 00be 3F       		.uleb128 0x3f
 913 00bf 19       		.uleb128 0x19
 914 00c0 03       		.uleb128 0x3
 915 00c1 0E       		.uleb128 0xe
 916 00c2 3A       		.uleb128 0x3a
 917 00c3 0B       		.uleb128 0xb
 918 00c4 3B       		.uleb128 0x3b
 919 00c5 05       		.uleb128 0x5
 920 00c6 27       		.uleb128 0x27
 921 00c7 19       		.uleb128 0x19
 922 00c8 11       		.uleb128 0x11
 923 00c9 01       		.uleb128 0x1
 924 00ca 12       		.uleb128 0x12
 925 00cb 06       		.uleb128 0x6
 926 00cc 40       		.uleb128 0x40
 927 00cd 18       		.uleb128 0x18
 928 00ce 9742     		.uleb128 0x2117
 929 00d0 19       		.uleb128 0x19
 930 00d1 01       		.uleb128 0x1
 931 00d2 13       		.uleb128 0x13
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 32


 932 00d3 00       		.byte	0
 933 00d4 00       		.byte	0
 934 00d5 10       		.uleb128 0x10
 935 00d6 05       		.uleb128 0x5
 936 00d7 00       		.byte	0
 937 00d8 03       		.uleb128 0x3
 938 00d9 0E       		.uleb128 0xe
 939 00da 3A       		.uleb128 0x3a
 940 00db 0B       		.uleb128 0xb
 941 00dc 3B       		.uleb128 0x3b
 942 00dd 05       		.uleb128 0x5
 943 00de 49       		.uleb128 0x49
 944 00df 13       		.uleb128 0x13
 945 00e0 02       		.uleb128 0x2
 946 00e1 18       		.uleb128 0x18
 947 00e2 00       		.byte	0
 948 00e3 00       		.byte	0
 949 00e4 11       		.uleb128 0x11
 950 00e5 34       		.uleb128 0x34
 951 00e6 00       		.byte	0
 952 00e7 03       		.uleb128 0x3
 953 00e8 0E       		.uleb128 0xe
 954 00e9 3A       		.uleb128 0x3a
 955 00ea 0B       		.uleb128 0xb
 956 00eb 3B       		.uleb128 0x3b
 957 00ec 05       		.uleb128 0x5
 958 00ed 49       		.uleb128 0x49
 959 00ee 13       		.uleb128 0x13
 960 00ef 02       		.uleb128 0x2
 961 00f0 17       		.uleb128 0x17
 962 00f1 00       		.byte	0
 963 00f2 00       		.byte	0
 964 00f3 12       		.uleb128 0x12
 965 00f4 2E       		.uleb128 0x2e
 966 00f5 00       		.byte	0
 967 00f6 3F       		.uleb128 0x3f
 968 00f7 19       		.uleb128 0x19
 969 00f8 03       		.uleb128 0x3
 970 00f9 0E       		.uleb128 0xe
 971 00fa 3A       		.uleb128 0x3a
 972 00fb 0B       		.uleb128 0xb
 973 00fc 3B       		.uleb128 0x3b
 974 00fd 05       		.uleb128 0x5
 975 00fe 27       		.uleb128 0x27
 976 00ff 19       		.uleb128 0x19
 977 0100 11       		.uleb128 0x11
 978 0101 01       		.uleb128 0x1
 979 0102 12       		.uleb128 0x12
 980 0103 06       		.uleb128 0x6
 981 0104 40       		.uleb128 0x40
 982 0105 18       		.uleb128 0x18
 983 0106 9742     		.uleb128 0x2117
 984 0108 19       		.uleb128 0x19
 985 0109 00       		.byte	0
 986 010a 00       		.byte	0
 987 010b 13       		.uleb128 0x13
 988 010c 34       		.uleb128 0x34
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 33


 989 010d 00       		.byte	0
 990 010e 03       		.uleb128 0x3
 991 010f 0E       		.uleb128 0xe
 992 0110 3A       		.uleb128 0x3a
 993 0111 0B       		.uleb128 0xb
 994 0112 3B       		.uleb128 0x3b
 995 0113 0B       		.uleb128 0xb
 996 0114 49       		.uleb128 0x49
 997 0115 13       		.uleb128 0x13
 998 0116 3F       		.uleb128 0x3f
 999 0117 19       		.uleb128 0x19
 1000 0118 02       		.uleb128 0x2
 1001 0119 18       		.uleb128 0x18
 1002 011a 00       		.byte	0
 1003 011b 00       		.byte	0
 1004 011c 14       		.uleb128 0x14
 1005 011d 2E       		.uleb128 0x2e
 1006 011e 01       		.byte	0x1
 1007 011f 3F       		.uleb128 0x3f
 1008 0120 19       		.uleb128 0x19
 1009 0121 03       		.uleb128 0x3
 1010 0122 0E       		.uleb128 0xe
 1011 0123 3A       		.uleb128 0x3a
 1012 0124 0B       		.uleb128 0xb
 1013 0125 3B       		.uleb128 0x3b
 1014 0126 0B       		.uleb128 0xb
 1015 0127 27       		.uleb128 0x27
 1016 0128 19       		.uleb128 0x19
 1017 0129 3C       		.uleb128 0x3c
 1018 012a 19       		.uleb128 0x19
 1019 012b 01       		.uleb128 0x1
 1020 012c 13       		.uleb128 0x13
 1021 012d 00       		.byte	0
 1022 012e 00       		.byte	0
 1023 012f 15       		.uleb128 0x15
 1024 0130 05       		.uleb128 0x5
 1025 0131 00       		.byte	0
 1026 0132 49       		.uleb128 0x49
 1027 0133 13       		.uleb128 0x13
 1028 0134 00       		.byte	0
 1029 0135 00       		.byte	0
 1030 0136 16       		.uleb128 0x16
 1031 0137 2E       		.uleb128 0x2e
 1032 0138 00       		.byte	0
 1033 0139 3F       		.uleb128 0x3f
 1034 013a 19       		.uleb128 0x19
 1035 013b 03       		.uleb128 0x3
 1036 013c 0E       		.uleb128 0xe
 1037 013d 3A       		.uleb128 0x3a
 1038 013e 0B       		.uleb128 0xb
 1039 013f 3B       		.uleb128 0x3b
 1040 0140 0B       		.uleb128 0xb
 1041 0141 27       		.uleb128 0x27
 1042 0142 19       		.uleb128 0x19
 1043 0143 3C       		.uleb128 0x3c
 1044 0144 19       		.uleb128 0x19
 1045 0145 00       		.byte	0
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 34


 1046 0146 00       		.byte	0
 1047 0147 17       		.uleb128 0x17
 1048 0148 2E       		.uleb128 0x2e
 1049 0149 01       		.byte	0x1
 1050 014a 3F       		.uleb128 0x3f
 1051 014b 19       		.uleb128 0x19
 1052 014c 03       		.uleb128 0x3
 1053 014d 0E       		.uleb128 0xe
 1054 014e 3A       		.uleb128 0x3a
 1055 014f 0B       		.uleb128 0xb
 1056 0150 3B       		.uleb128 0x3b
 1057 0151 0B       		.uleb128 0xb
 1058 0152 27       		.uleb128 0x27
 1059 0153 19       		.uleb128 0x19
 1060 0154 3C       		.uleb128 0x3c
 1061 0155 19       		.uleb128 0x19
 1062 0156 00       		.byte	0
 1063 0157 00       		.byte	0
 1064 0158 00       		.byte	0
 1065              		.section	.debug_loc,"",%progbits
 1066              	.Ldebug_loc0:
 1067              	.LLST0:
 1068 0000 04000000 		.4byte	.LVL12
 1069 0004 0C000000 		.4byte	.LVL14
 1070 0008 0100     		.2byte	0x1
 1071 000a 51       		.byte	0x51
 1072 000b 0C000000 		.4byte	.LVL14
 1073 000f 14000000 		.4byte	.LFE4
 1074 0013 0100     		.2byte	0x1
 1075 0015 52       		.byte	0x52
 1076 0016 00000000 		.4byte	0
 1077 001a 00000000 		.4byte	0
 1078              	.LLST1:
 1079 001e 04000000 		.4byte	.LVL16
 1080 0022 0C000000 		.4byte	.LVL18
 1081 0026 0100     		.2byte	0x1
 1082 0028 51       		.byte	0x51
 1083 0029 0C000000 		.4byte	.LVL18
 1084 002d 14000000 		.4byte	.LFE5
 1085 0031 0100     		.2byte	0x1
 1086 0033 52       		.byte	0x52
 1087 0034 00000000 		.4byte	0
 1088 0038 00000000 		.4byte	0
 1089              		.section	.debug_aranges,"",%progbits
 1090 0000 6C000000 		.4byte	0x6c
 1091 0004 0200     		.2byte	0x2
 1092 0006 00000000 		.4byte	.Ldebug_info0
 1093 000a 04       		.byte	0x4
 1094 000b 00       		.byte	0
 1095 000c 0000     		.2byte	0
 1096 000e 0000     		.2byte	0
 1097 0010 00000000 		.4byte	.LFB7
 1098 0014 0A000000 		.4byte	.LFE7-.LFB7
 1099 0018 00000000 		.4byte	.LFB8
 1100 001c 08000000 		.4byte	.LFE8-.LFB8
 1101 0020 00000000 		.4byte	.LFB9
 1102 0024 08000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 35


 1103 0028 00000000 		.4byte	.LFB0
 1104 002c 08000000 		.4byte	.LFE0-.LFB0
 1105 0030 00000000 		.4byte	.LFB1
 1106 0034 1C000000 		.4byte	.LFE1-.LFB1
 1107 0038 00000000 		.4byte	.LFB2
 1108 003c 20000000 		.4byte	.LFE2-.LFB2
 1109 0040 00000000 		.4byte	.LFB3
 1110 0044 2C000000 		.4byte	.LFE3-.LFB3
 1111 0048 00000000 		.4byte	.LFB4
 1112 004c 14000000 		.4byte	.LFE4-.LFB4
 1113 0050 00000000 		.4byte	.LFB5
 1114 0054 14000000 		.4byte	.LFE5-.LFB5
 1115 0058 00000000 		.4byte	.LFB6
 1116 005c 0C000000 		.4byte	.LFE6-.LFB6
 1117 0060 00000000 		.4byte	.LFB10
 1118 0064 3C000000 		.4byte	.LFE10-.LFB10
 1119 0068 00000000 		.4byte	0
 1120 006c 00000000 		.4byte	0
 1121              		.section	.debug_ranges,"",%progbits
 1122              	.Ldebug_ranges0:
 1123 0000 00000000 		.4byte	.LFB7
 1124 0004 0A000000 		.4byte	.LFE7
 1125 0008 00000000 		.4byte	.LFB8
 1126 000c 08000000 		.4byte	.LFE8
 1127 0010 00000000 		.4byte	.LFB9
 1128 0014 08000000 		.4byte	.LFE9
 1129 0018 00000000 		.4byte	.LFB0
 1130 001c 08000000 		.4byte	.LFE0
 1131 0020 00000000 		.4byte	.LFB1
 1132 0024 1C000000 		.4byte	.LFE1
 1133 0028 00000000 		.4byte	.LFB2
 1134 002c 20000000 		.4byte	.LFE2
 1135 0030 00000000 		.4byte	.LFB3
 1136 0034 2C000000 		.4byte	.LFE3
 1137 0038 00000000 		.4byte	.LFB4
 1138 003c 14000000 		.4byte	.LFE4
 1139 0040 00000000 		.4byte	.LFB5
 1140 0044 14000000 		.4byte	.LFE5
 1141 0048 00000000 		.4byte	.LFB6
 1142 004c 0C000000 		.4byte	.LFE6
 1143 0050 00000000 		.4byte	.LFB10
 1144 0054 3C000000 		.4byte	.LFE10
 1145 0058 00000000 		.4byte	0
 1146 005c 00000000 		.4byte	0
 1147              		.section	.debug_line,"",%progbits
 1148              	.Ldebug_line0:
 1149 0000 70010000 		.section	.debug_str,"MS",%progbits,1
 1149      02007C00 
 1149      00000201 
 1149      FB0E0D00 
 1149      01010101 
 1150              	.LASF14:
 1151 0000 72656733 		.ascii	"reg32\000"
 1151      3200
 1152              	.LASF27:
 1153 0006 74784669 		.ascii	"txFifoCtrl\000"
 1153      666F4374 
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 36


 1153      726C00
 1154              	.LASF24:
 1155 0011 55415254 		.ascii	"UART_SetTxFifoLevel\000"
 1155      5F536574 
 1155      54784669 
 1155      666F4C65 
 1155      76656C00 
 1156              	.LASF25:
 1157 0025 6C657665 		.ascii	"level\000"
 1157      6C00
 1158              	.LASF31:
 1159 002b 55415254 		.ascii	"UART_customIntrHandler\000"
 1159      5F637573 
 1159      746F6D49 
 1159      6E747248 
 1159      616E646C 
 1160              	.LASF3:
 1161 0042 73686F72 		.ascii	"short unsigned int\000"
 1161      7420756E 
 1161      7369676E 
 1161      65642069 
 1161      6E7400
 1162              	.LASF39:
 1163 0055 433A5C55 		.ascii	"C:\\Users\\edtriccorp\\Documents\\PSoC Creator\\Her"
 1163      73657273 
 1163      5C656474 
 1163      72696363 
 1163      6F72705C 
 1164 0083 6B756C65 		.ascii	"kulexOpenHouse\\HerkulexOpenHouse.cydsn\000"
 1164      784F7065 
 1164      6E486F75 
 1164      73655C48 
 1164      65726B75 
 1165              	.LASF30:
 1166 00aa 55415254 		.ascii	"UART_initVar\000"
 1166      5F696E69 
 1166      74566172 
 1166      00
 1167              	.LASF11:
 1168 00b7 666C6F61 		.ascii	"float\000"
 1168      7400
 1169              	.LASF20:
 1170 00bd 55415254 		.ascii	"UART_Enable\000"
 1170      5F456E61 
 1170      626C6500 
 1171              	.LASF1:
 1172 00c9 756E7369 		.ascii	"unsigned char\000"
 1172      676E6564 
 1172      20636861 
 1172      7200
 1173              	.LASF19:
 1174 00d7 55415254 		.ascii	"UART_Init\000"
 1174      5F496E69 
 1174      7400
 1175              	.LASF32:
 1176 00e1 55415254 		.ascii	"UART_UartPostEnable\000"
 1176      5F556172 
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 37


 1176      74506F73 
 1176      74456E61 
 1176      626C6500 
 1177              	.LASF5:
 1178 00f5 6C6F6E67 		.ascii	"long unsigned int\000"
 1178      20756E73 
 1178      69676E65 
 1178      6420696E 
 1178      7400
 1179              	.LASF33:
 1180 0107 55415254 		.ascii	"UART_UartStop\000"
 1180      5F556172 
 1180      7453746F 
 1180      7000
 1181              	.LASF9:
 1182 0115 75696E74 		.ascii	"uint8\000"
 1182      3800
 1183              	.LASF21:
 1184 011b 55415254 		.ascii	"UART_Start\000"
 1184      5F537461 
 1184      727400
 1185              	.LASF12:
 1186 0126 646F7562 		.ascii	"double\000"
 1186      6C6500
 1187              	.LASF29:
 1188 012d 66756E63 		.ascii	"func\000"
 1188      00
 1189              	.LASF28:
 1190 0132 55415254 		.ascii	"UART_SetCustomInterruptHandler\000"
 1190      5F536574 
 1190      43757374 
 1190      6F6D496E 
 1190      74657272 
 1191              	.LASF10:
 1192 0151 75696E74 		.ascii	"uint32\000"
 1192      333200
 1193              	.LASF38:
 1194 0158 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART.c\000"
 1194      6E657261 
 1194      7465645F 
 1194      536F7572 
 1194      63655C50 
 1195              	.LASF18:
 1196 0178 55415254 		.ascii	"UART_ScbModeStop\000"
 1196      5F536362 
 1196      4D6F6465 
 1196      53746F70 
 1196      00
 1197              	.LASF8:
 1198 0189 756E7369 		.ascii	"unsigned int\000"
 1198      676E6564 
 1198      20696E74 
 1198      00
 1199              	.LASF34:
 1200 0196 55415254 		.ascii	"UART_UartInit\000"
 1200      5F556172 
 1200      74496E69 
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 38


 1200      7400
 1201              	.LASF7:
 1202 01a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1202      206C6F6E 
 1202      6720756E 
 1202      7369676E 
 1202      65642069 
 1203              	.LASF37:
 1204 01bb 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1204      4320342E 
 1204      382E3420 
 1204      32303134 
 1204      30353236 
 1205 01ee 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1205      20726576 
 1205      6973696F 
 1205      6E203231 
 1205      31333538 
 1206 0221 67202D66 		.ascii	"g -ffunction-sections\000"
 1206      66756E63 
 1206      74696F6E 
 1206      2D736563 
 1206      74696F6E 
 1207              	.LASF22:
 1208 0237 55415254 		.ascii	"UART_Stop\000"
 1208      5F53746F 
 1208      7000
 1209              	.LASF41:
 1210 0241 4379496E 		.ascii	"CyIntClearPending\000"
 1210      74436C65 
 1210      61725065 
 1210      6E64696E 
 1210      6700
 1211              	.LASF15:
 1212 0253 73697A65 		.ascii	"sizetype\000"
 1212      74797065 
 1212      00
 1213              	.LASF6:
 1214 025c 6C6F6E67 		.ascii	"long long int\000"
 1214      206C6F6E 
 1214      6720696E 
 1214      7400
 1215              	.LASF23:
 1216 026a 55415254 		.ascii	"UART_SetRxFifoLevel\000"
 1216      5F536574 
 1216      52784669 
 1216      666F4C65 
 1216      76656C00 
 1217              	.LASF13:
 1218 027e 63686172 		.ascii	"char\000"
 1218      00
 1219              	.LASF36:
 1220 0283 4379496E 		.ascii	"CyIntDisable\000"
 1220      74446973 
 1220      61626C65 
 1220      00
 1221              	.LASF2:
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\cckpzpPZ.s 			page 39


 1222 0290 73686F72 		.ascii	"short int\000"
 1222      7420696E 
 1222      7400
 1223              	.LASF16:
 1224 029a 55415254 		.ascii	"UART_ScbEnableIntr\000"
 1224      5F536362 
 1224      456E6162 
 1224      6C65496E 
 1224      747200
 1225              	.LASF17:
 1226 02ad 55415254 		.ascii	"UART_ScbModePostEnable\000"
 1226      5F536362 
 1226      4D6F6465 
 1226      506F7374 
 1226      456E6162 
 1227              	.LASF26:
 1228 02c4 72784669 		.ascii	"rxFifoCtrl\000"
 1228      666F4374 
 1228      726C00
 1229              	.LASF4:
 1230 02cf 6C6F6E67 		.ascii	"long int\000"
 1230      20696E74 
 1230      00
 1231              	.LASF35:
 1232 02d8 4379496E 		.ascii	"CyIntEnable\000"
 1232      74456E61 
 1232      626C6500 
 1233              	.LASF0:
 1234 02e4 7369676E 		.ascii	"signed char\000"
 1234      65642063 
 1234      68617200 
 1235              	.LASF40:
 1236 02f0 55415254 		.ascii	"UART_I2CSlaveNackGeneration\000"
 1236      5F493243 
 1236      536C6176 
 1236      654E6163 
 1236      6B47656E 
 1237              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
